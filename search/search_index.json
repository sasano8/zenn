{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"\u8a18\u4e8b00"},{"location":"infra-001-wsl/","text":"\u3053\u306e\u8a18\u4e8b\u304c\u76ee\u6307\u3059\u76ee\u6a19 Windows\u306e\u958b\u767a\u74b0\u5883\u306b\u304a\u3044\u3066\u3001WSL2\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u30c7\u30d5\u30a1\u30af\u30c8\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u306b\u306a\u308a\u3064\u3064\u3042\u308b\u3002 \u3057\u304b\u3057\u3001WSL2\u3092\u4f7f\u7528\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u6b21\u306e\u554f\u984c\u306b\u906d\u9047\u3059\u308b\u4eba\u306f\u591a\u3044\u306e\u3067\u306f\u306a\u3044\u3060\u308d\u3046\u304b\uff1f Systemd\u304c\u4f7f\u3048\u306a\u3044 WSL2\u4e0a\u3067\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u6271\u3044\u305f\u3044 \u306f\u3058\u3081\u306b WSL2\u306f\u30b3\u30f3\u30c6\u30ca\u74b0\u5883\u306a\u305f\u3081\u3001systemd\u304c\u8d77\u52d5\u3057\u306a\u3044\uff08\u5c06\u6765\u7684\u306b\u3001WSL2\u3067systemd\u3092\u516c\u5f0f\u306b\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u610f\u601d\u306f\u3042\u308b\u3088\u3046\u3060\uff09\u3002 Ubuntu\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u306f\u3001\u5f93\u6765\u306eapt\u304b\u3089snap\u306b\u79fb\u884c\u3057\u3066\u3044\u304f\u304c\u3001snap\u306fsystemd\u306b\u4f9d\u5b58\u3059\u308b\u305f\u3081\u3001systemd\u304c\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u3068\u90fd\u5408\u304c\u60aa\u3044\u3053\u3068\u304c\u591a\u3044\u3002 \u524d\u63d0\u74b0\u5883 WSL\u304b\u3089\u4eee\u60f3\u5316\u30b7\u30b9\u30c6\u30e0\uff08NestedVM\uff09\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u4ee5\u4e0b\u306e\u74b0\u5883\u304c\u5fc5\u8981\u3067\u3059\u3002 Windows 11 WSL\uff08Windows Store\u7248\uff09\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb WSL\u3067Systemd\u3092\u4f7f\u3046\u305f\u3081\u306b\u3001Windows Store\u7248\u306eWSL\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 Ubuntu 22.04\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb Windows store\u304b\u3089Ubuntu 22.04\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 https://apps.microsoft.com/store/detail/ubuntu-2204-lts/9PN20MSR04DW?hl=ja-jp&gl=JP Ubuntu 22.04\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 Windows Terminal\u304b\u3089Ubuntu 22.04 LTS\u3092\u8d77\u52d5\u3057\u3001\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u9032\u3081\u308b\u3002 WSL\u306b\u30ed\u30b0\u30a4\u30f3\u6642\u306b /etc/update-motd.d/50-landscape-sysinfo: 17: cannot create /var/lib/landscape/landscape-sysinfo.cache: Permission denied \u3068\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b\u3002 \u5f71\u97ff\u306f\u306a\u3044\u3088\u3046\u3060\u304c\u3001\u6c17\u306b\u306a\u308b\u5834\u5408\u306f\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002 sudo apt remove -y landscape-common sudo apt -yautoremove # Optionally, but recommended rm ~/.motd_shown docker\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u5168\u3066\u306e\u30b7\u30a7\u30eb\u304b\u3089\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u304a\u304f\u3002 Windows\u4e0a\u306eDocker Desktop\u3092\u8d77\u52d5\u3059\u308b\u3002 Resources -> WSL Integration \u304b\u3089 Ubuntu-22.04 \u3092\u6709\u52b9\u306b\u3059\u308b\u3002 docker\u304c\u4f7f\u7528\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002 docker version docker run ubuntu:14.04 /bin/echo 'Hello world' Systemd\u306e\u6709\u52b9\u5316 sudo vi /etc/wsl.conf [boot] systemd = true \u518d\u8d77\u52d5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\uff1f\uff1f Systemd\u306e\u6709\u52b9\u5316\uff08systemd-genie\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\u203b\u3044\u305a\u308c\u6d88\u3059 WSL\u4e0a\u3067systemd\u3092\u52d5\u4f5c\u3055\u305b\u308b\u30c4\u30fc\u30eb\u3092\u3001\u6b21\u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 https://github.com/arkane-systems/genie https://arkane-systems.github.io/wsl-transdebian sudo apt install -y lsb-release sudo wget -O /etc/apt/trusted.gpg.d/wsl-transdebian.gpg https://arkane-systems.github.io/wsl-transdebian/apt/wsl-transdebian.gpg sudo chmod a+r /etc/apt/trusted.gpg.d/wsl-transdebian.gpg sudo tee /etc/apt/sources.list.d/wsl-transdebian.list << EOF deb https://arkane-systems.github.io/wsl-transdebian/apt/ $(lsb_release -cs) main deb-src https://arkane-systems.github.io/wsl-transdebian/apt/ $(lsb_release -cs) main EOF sudo apt update sudo apt install -y systemd-genie Failed to retrieve available kernel versions. Failed to check for processor microcode upgrades. apt purge needrestart \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002 tee - a ~/ . bashrc << EOF # PID 1 \u304c systemd \u3067\u306a\u3044\u5834\u5408\u306b \" genie -s \" \u3092\u5b9f\u884c if [ \" \\`ps -eo pid,cmd --sort +pid | grep systemd | awk 'NR==1 { print \\$1 }'\\` \" != \" 1 \" ] ; then genie - s - v fi EOF source ~/ . bashrc \u521d\u56de\u8d77\u52d5\u6642\u306f\u3001 Waiting for systemd....!! \u3067\u6b62\u307e\u308b\u306e\u3067 Ctrl-C \u3067\u4e00\u5ea6\u505c\u6b62\u3057\u518d\u5ea6\u30b7\u30a7\u30eb\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3002 snap \u304c\u4f7f\u7528\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002 sudo snap version <!-- \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002 sudo systemctl stop getty @tty1 sudo systemctl disable getty @tty1 ``` --> # KVM\u4eee\u60f3\u5316\u306e\u78ba\u8a8d \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b \u3002 ``` shell sudo apt install - y cpu - checker \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001\u30b7\u30b9\u30c6\u30e0\u304cKVM\u4eee\u60f3\u5316\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3002 sudo kvm-ok # INFO: /dev/kvm exists # KVM acceleration can be used egrep -c '(vmx|svm)' /proc/cpuinfo # 0\u4ee5\u4e0a\u3067\u4eee\u60f3\u5316\u5bfe\u5fdc \u5f8c\u307b\u3069\u5c0e\u5165\u3059\u308b kubevirt \u3067\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 sudo apt install -y qemu-kvm qemu libvirt-clients libvirt-daemon-system KVM\u306e\u64cd\u4f5c\u306b\u5fc5\u8981\u306a\u6a29\u9650\u3092\u4e0e\u3048\u308b\u3002 sudo usermod - aG kvm $ USER && newgrp kvm sudo usermod - aG docker $ USER ls - l / dev / kvm ls - l / var / run / docker . sock \u4eee\u60f3\u30de\u30b7\u30f3\u4f5c\u6210\u80fd\u529b\u306b\u554f\u984c\u304c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 virt-host-validate qemu virsh list multipass\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002 KVM\u4eee\u60f3\u5316\u306e\u78ba\u8a8d\u304c\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001 multipass \u306f\u4f7f\u7528\u3067\u304d\u306a\u3044\u3002 sudo snap install multipass sudo snap info multipass \u4eee\u60f3\u30de\u30b7\u30f3\u3092\u8d77\u52d5\u3059\u308b\u3002 multipass find multipass launch --name=sample 22.04 \u4eee\u60f3\u30de\u30b7\u30f3\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3002 mutlpass shell sample exit # \u4eee\u60f3\u30de\u30b7\u30f3\u4e0a\u3067 \u4eee\u60f3\u30de\u30b7\u30f3\u3092\u524a\u9664\u3059\u308b\u3002 multipass delete sample multipass purge \u30d7\u30ed\u30ad\u30b7\u74b0\u5883\u5316\u306b\u304a\u3051\u308bmultipass OS\u30a4\u30e1\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\u969b\u306b\u5916\u90e8\u901a\u4fe1\u304c\u5fc5\u8981\u3068\u306a\u308b\u3002 \u30d7\u30ed\u30ad\u30b7\u74b0\u5883\u5316\u3067\u30a4\u30e1\u30fc\u30b8\u53d6\u5f97\u306b\u5931\u6557\u3059\u308b\u5834\u5408\u306f\u3001multipass\u306e\u5b9f\u884c\u74b0\u5883\u3092\u898b\u76f4\u3059\u3002 systemd\u306e\u5b9f\u884c\u7a7a\u9593\u3067\u30d7\u30ed\u30ad\u30b7\u8a2d\u5b9a\u304c\u306a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001 /etc/systemd/system/snap.multipass.multipassd.service \u3092\u6b21\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u3057\u3001systemd\u3092\u518d\u8d77\u52d5\u3059\u308c\u3070\u52d5\u4f5c\u3059\u308b\u306f\u305a\u3002 [Service] EnvironmentFile = /etc/environment Environment = http_proxy=http://your_proxy Environment = HTTP_PROXY=http://your_proxy Environment = https_proxy=http://your_proxy Environment = HTTPS_PROXY=http://your_proxy minikube\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb https://minikube.sigs.k8s.io/docs/start/ \u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u9032\u3081\u308b\u3002 curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 sudo install minikube-linux-amd64 /usr/local/bin/minikube \u5fc5\u8981\u306b\u5fdc\u3058\u3066minikube\u306e\u69cb\u6210\u3092\u5909\u66f4\u3057\u307e\u3059\u3002 minikube version minikube config set driver docker # minikube config set driver kvm2 minikube config set memory 4096 # \u30c7\u30d5\u30a9\u30eb\u30c8\u306f2048 minikube config set container-runtime cri-o # \u3044\u3089\u306a\u3044 minikube\u3092\u8d77\u52d5\u3059\u308b\u3002 minikube start # \u6307\u5b9a\u304c\u306a\u3044\u3068\u6700\u65b0\u306ekubernetes\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u308b\u304c\u30011.24\u3067\u306f\u554f\u984c\u304c\u751f\u3058\u305f\u306e\u3067\u4efb\u610f\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a # minikube start --kubernetes-version=v1.23.8 kubectl \u3092\u30db\u30b9\u30c8\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 VERSION=$(minikube kubectl version | head -1 | awk -F', ' {'print $3'} | awk -F':' {'print $2'} | sed s/\\\"//g) sudo install ${ HOME } /.minikube/cache/linux/amd64/ ${ VERSION } /kubectl /usr/local/bin kubectl version kubectl \u306e\u4fdd\u7ba1\u3092\u6709\u52b9\u5316\u3059\u308b\u3002 echo \"source <(kubectl completion bash)\" >> ~/.bashrc \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3002 kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.4 kubectl expose deployment hello-minikube --type=NodePort --port=8080 kubectl get services hello-minikube minikube service hello-minikube kubectl port-forward service/hello-minikube 7080:8080 curl http://localhost:7080 # \u5225\u7aef\u672b\u3067 minikube dashboard --port=33400 curl http://localhost:33400 # \u5225\u7aef\u672b\u3067 krew\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u516c\u5f0f\u624b\u9806\u3092\u53c2\u8003\u306b krew \u3092\u5c0e\u5165\u3059\u308b\u3002 https://krew.sigs.k8s.io/docs/user-guide/setup/install/ echo 'export PATH=\"${KREW_ROOT:-$HOME/.krew}/bin:$PATH\"' >> ~/.bashrc krew\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u8a8d\u8b58\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002 kubectl krew kubevirt\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb kubevirt\u516c\u5f0f\u624b\u9806\uff11 \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057kubevirt\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002 export VERSION =$ ( curl - s https : // api . github . com / repos / kubevirt / kubevirt / releases | grep tag_name | grep - v -- '-rc' | sort - r | head - 1 | awk - F ': ' '{print $2}' | sed 's/,//' | xargs ) echo $ VERSION kubectl create - f https : // github . com / kubevirt / kubevirt / releases / download /$ { VERSION } / kubevirt - operator . yaml kubectl create - f https : // github . com / kubevirt / kubevirt / releases / download /$ { VERSION } / kubevirt - cr . yaml kubevirt\u304c\u5c55\u958b\u3055\u308c\u308b\u307e\u3067\u5f85\u3061\u307e\u3059\u3002 kubectl get all -n kubevirt Virtctl\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb https://krew.sigs.k8s.io/docs/user-guide/setup/install/ VERSION =$ ( kubectl get kubevirt . kubevirt . io / kubevirt - n kubevirt - o = jsonpath = \"{.status.observedKubeVirtVersion}\" ) ARCH =$ ( uname - s | tr A - Z a - z ) -$ ( uname - m | sed 's/x86_64/amd64/' ) || windows - amd64 . exe echo https : // github . com / kubevirt / kubevirt / releases / download /$ { VERSION } / virtctl -$ { VERSION } -$ { ARCH } curl - L - o virtctl https : // github . com / kubevirt / kubevirt / releases / download /$ { VERSION } / virtctl -$ { VERSION } -$ { ARCH } chmod + x virtctl sudo install virtctl / usr / local / bin virtctl version \u30b5\u30f3\u30d7\u30eb\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3002 kubectl apply -f https://kubevirt.io/labs/manifests/vm.yaml kubectl get vms kubectl get vms -o yaml testvm \u4eee\u60f3\u30de\u30b7\u30f3\u3092\u8d77\u52d5\u3059\u308b\u3002 virtctl start testvm \u203b\u73fe\u72b6\u306f\u4eee\u60f3\u30de\u30b7\u30f3\u306e\u8d77\u52d5\u304c\u5931\u6557\u3057\u3066\u3057\u307e\u3044\u3001\u5bfe\u7b56\u3067\u304d\u3066\u3044\u306a\u3044\u3002 \u4eee\u60f3\u30de\u30b7\u30f3\u3092\u505c\u6b62\u3059\u308b\u3002 virtctl stop testvm \u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0 Ubuntu 22.04\u3092\u521d\u671f\u5316\u3057\u305f\u3044 \u4f55\u3089\u304b\u306e\u7406\u7531\u3067Ubuntu 22.04\u3092\u521d\u671f\u5316\u72b6\u614b\u306b\u623b\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u6b21\u306e\u624b\u9806\u3092Windows\u5074\u3067\u5b9f\u884c\u3059\u308b\u3002 Ubuntu 22.04\u3092\u524a\u9664\u3059\u308b\u3002 wsl -- shutdown wsl -- unregister Ubuntu - 22.04 Docker-Desktop\u3067WSL\u3068\u7d71\u5408\u3057\u305f\u5834\u5408\u306f\u3001 minikube\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304cWidows\u3068\u5171\u6709\u3055\u308c\u3066\u3044\u308b\u3002 \u4e0d\u8981\u306a\u5834\u5408\u306f\u3001minikube\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u524a\u9664\u3059\u308b\u3002 docker ps | grep minikube docker rm minikube Ubuntu 22.04\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 \u304b\u3089\u3084\u308a\u76f4\u3059\u3002 pyenv\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb https://github.com/pyenv/pyenv/wiki#suggested-build-environment \u3092\u53c2\u8003\u306b\u524d\u63d0\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \\ libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\ libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev https://github.com/pyenv/pyenv \u3092\u53c2\u8003\u306bpyenv\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 git clone https://github.com/pyenv/pyenv.git ~/.pyenv cd ~/.pyenv && src/configure && make -C src echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/. bashrc echo 'command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/. bashrc echo 'eval \"$(pyenv init -)\"' >> ~/. bashrc \u4efb\u610f\u306epython\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 pyenv install 3.8.6 poetry\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb https://python-poetry.org/docs/ \u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - \u30b7\u30a7\u30eb\u3092\u518d\u8d77\u52d5\u3057\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3002 poetry config virtualenvs.create true poetry config virtualenvs.in-project true \u65b0\u3057\u3044Windows\u3092\u8cb7\u3063\u305f\u3089\u3084\u308b\u3053\u3068 \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u512a\u5148\u3059\u308b\uff08\u4ee5\u4e0b\u306e\u307f\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304a\u304f\u3068\u3088\u3044\uff09 \u30a2\u30a4\u30b3\u30f3\u306e\u4ee3\u308f\u308a\u306b\u7e2e\u5c0f\u7248\u3092\u8868\u793a\u3059\u308b \u30b9\u30af\u30ea\u30fc\u30f3\u30d5\u30a9\u30f3\u30c8\u306e\u7e01\u3092\u6ed1\u3089\u304b\u306b\u3059\u308b \u753b\u50cf\u3084\u30c6\u30ad\u30b9\u30c8\u306e\u7e01\u3092\u6ed1\u3089\u304b\u306b\u3059\u308b -> \u30aa\u30d5 \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u524a\u9664 wsl -- list - v wsl -- shutdown wsl -- unregister Ubuntu - 22.04 WSL\u80a5\u5927\u5316\u554f\u984c https://qiita.com/TsuyoshiUshio@github/items/7a745582bbcd35062430 docker image prune docker container prune docker volume prune wsl --shutdown powershell\u3092\u7ba1\u7406\u8005\u6a29\u9650\u3067\u8d77\u52d5\u3057\u3001windows\u4e0a\u306e vhd* \u30d5\u30a1\u30a4\u30eb\u3092\u691c\u7d22\u3057\u3001\u305d\u308c\u3089\u3057\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u6700\u9069\u5316\u3059\u308b\u3002 cd $HOME\\..\\.. # \u30c9\u30e9\u30a4\u30d6\u30eb\u30fc\u30c8\u306b\u79fb\u52d5 Get-ChildItem -Recurse -Force -ErrorAction SilentlyContinue -Filter \"*.vhdx\" | select FullName, length, LastWriteTime optimize-vhd -Mode full -Path <path>","title":"\u8a18\u4e8b01"},{"location":"infra-001-wsl/#_1","text":"Windows\u306e\u958b\u767a\u74b0\u5883\u306b\u304a\u3044\u3066\u3001WSL2\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u30c7\u30d5\u30a1\u30af\u30c8\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u306b\u306a\u308a\u3064\u3064\u3042\u308b\u3002 \u3057\u304b\u3057\u3001WSL2\u3092\u4f7f\u7528\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u6b21\u306e\u554f\u984c\u306b\u906d\u9047\u3059\u308b\u4eba\u306f\u591a\u3044\u306e\u3067\u306f\u306a\u3044\u3060\u308d\u3046\u304b\uff1f Systemd\u304c\u4f7f\u3048\u306a\u3044 WSL2\u4e0a\u3067\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u6271\u3044\u305f\u3044","title":"\u3053\u306e\u8a18\u4e8b\u304c\u76ee\u6307\u3059\u76ee\u6a19"},{"location":"infra-001-wsl/#_2","text":"WSL2\u306f\u30b3\u30f3\u30c6\u30ca\u74b0\u5883\u306a\u305f\u3081\u3001systemd\u304c\u8d77\u52d5\u3057\u306a\u3044\uff08\u5c06\u6765\u7684\u306b\u3001WSL2\u3067systemd\u3092\u516c\u5f0f\u306b\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u610f\u601d\u306f\u3042\u308b\u3088\u3046\u3060\uff09\u3002 Ubuntu\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u306f\u3001\u5f93\u6765\u306eapt\u304b\u3089snap\u306b\u79fb\u884c\u3057\u3066\u3044\u304f\u304c\u3001snap\u306fsystemd\u306b\u4f9d\u5b58\u3059\u308b\u305f\u3081\u3001systemd\u304c\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u3068\u90fd\u5408\u304c\u60aa\u3044\u3053\u3068\u304c\u591a\u3044\u3002","title":"\u306f\u3058\u3081\u306b"},{"location":"infra-001-wsl/#_3","text":"WSL\u304b\u3089\u4eee\u60f3\u5316\u30b7\u30b9\u30c6\u30e0\uff08NestedVM\uff09\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u4ee5\u4e0b\u306e\u74b0\u5883\u304c\u5fc5\u8981\u3067\u3059\u3002 Windows 11","title":"\u524d\u63d0\u74b0\u5883"},{"location":"infra-001-wsl/#wslwindows-store","text":"WSL\u3067Systemd\u3092\u4f7f\u3046\u305f\u3081\u306b\u3001Windows Store\u7248\u306eWSL\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002","title":"WSL\uff08Windows Store\u7248\uff09\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"infra-001-wsl/#ubuntu-2204","text":"Windows store\u304b\u3089Ubuntu 22.04\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 https://apps.microsoft.com/store/detail/ubuntu-2204-lts/9PN20MSR04DW?hl=ja-jp&gl=JP","title":"Ubuntu 22.04\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"infra-001-wsl/#ubuntu-2204_1","text":"Windows Terminal\u304b\u3089Ubuntu 22.04 LTS\u3092\u8d77\u52d5\u3057\u3001\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u9032\u3081\u308b\u3002 WSL\u306b\u30ed\u30b0\u30a4\u30f3\u6642\u306b /etc/update-motd.d/50-landscape-sysinfo: 17: cannot create /var/lib/landscape/landscape-sysinfo.cache: Permission denied \u3068\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b\u3002 \u5f71\u97ff\u306f\u306a\u3044\u3088\u3046\u3060\u304c\u3001\u6c17\u306b\u306a\u308b\u5834\u5408\u306f\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002 sudo apt remove -y landscape-common sudo apt -yautoremove # Optionally, but recommended rm ~/.motd_shown","title":"Ubuntu 22.04\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7"},{"location":"infra-001-wsl/#docker","text":"\u5168\u3066\u306e\u30b7\u30a7\u30eb\u304b\u3089\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u304a\u304f\u3002 Windows\u4e0a\u306eDocker Desktop\u3092\u8d77\u52d5\u3059\u308b\u3002 Resources -> WSL Integration \u304b\u3089 Ubuntu-22.04 \u3092\u6709\u52b9\u306b\u3059\u308b\u3002 docker\u304c\u4f7f\u7528\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002 docker version docker run ubuntu:14.04 /bin/echo 'Hello world'","title":"docker\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"infra-001-wsl/#systemd","text":"sudo vi /etc/wsl.conf [boot] systemd = true \u518d\u8d77\u52d5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\uff1f\uff1f","title":"Systemd\u306e\u6709\u52b9\u5316"},{"location":"infra-001-wsl/#systemdsystemd-genie","text":"WSL\u4e0a\u3067systemd\u3092\u52d5\u4f5c\u3055\u305b\u308b\u30c4\u30fc\u30eb\u3092\u3001\u6b21\u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 https://github.com/arkane-systems/genie https://arkane-systems.github.io/wsl-transdebian sudo apt install -y lsb-release sudo wget -O /etc/apt/trusted.gpg.d/wsl-transdebian.gpg https://arkane-systems.github.io/wsl-transdebian/apt/wsl-transdebian.gpg sudo chmod a+r /etc/apt/trusted.gpg.d/wsl-transdebian.gpg sudo tee /etc/apt/sources.list.d/wsl-transdebian.list << EOF deb https://arkane-systems.github.io/wsl-transdebian/apt/ $(lsb_release -cs) main deb-src https://arkane-systems.github.io/wsl-transdebian/apt/ $(lsb_release -cs) main EOF sudo apt update sudo apt install -y systemd-genie Failed to retrieve available kernel versions. Failed to check for processor microcode upgrades. apt purge needrestart \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002 tee - a ~/ . bashrc << EOF # PID 1 \u304c systemd \u3067\u306a\u3044\u5834\u5408\u306b \" genie -s \" \u3092\u5b9f\u884c if [ \" \\`ps -eo pid,cmd --sort +pid | grep systemd | awk 'NR==1 { print \\$1 }'\\` \" != \" 1 \" ] ; then genie - s - v fi EOF source ~/ . bashrc \u521d\u56de\u8d77\u52d5\u6642\u306f\u3001 Waiting for systemd....!! \u3067\u6b62\u307e\u308b\u306e\u3067 Ctrl-C \u3067\u4e00\u5ea6\u505c\u6b62\u3057\u518d\u5ea6\u30b7\u30a7\u30eb\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3002 snap \u304c\u4f7f\u7528\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002 sudo snap version <!-- \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002 sudo systemctl stop getty @tty1 sudo systemctl disable getty @tty1 ``` --> # KVM\u4eee\u60f3\u5316\u306e\u78ba\u8a8d \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b \u3002 ``` shell sudo apt install - y cpu - checker \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001\u30b7\u30b9\u30c6\u30e0\u304cKVM\u4eee\u60f3\u5316\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3002 sudo kvm-ok # INFO: /dev/kvm exists # KVM acceleration can be used egrep -c '(vmx|svm)' /proc/cpuinfo # 0\u4ee5\u4e0a\u3067\u4eee\u60f3\u5316\u5bfe\u5fdc \u5f8c\u307b\u3069\u5c0e\u5165\u3059\u308b kubevirt \u3067\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 sudo apt install -y qemu-kvm qemu libvirt-clients libvirt-daemon-system KVM\u306e\u64cd\u4f5c\u306b\u5fc5\u8981\u306a\u6a29\u9650\u3092\u4e0e\u3048\u308b\u3002 sudo usermod - aG kvm $ USER && newgrp kvm sudo usermod - aG docker $ USER ls - l / dev / kvm ls - l / var / run / docker . sock \u4eee\u60f3\u30de\u30b7\u30f3\u4f5c\u6210\u80fd\u529b\u306b\u554f\u984c\u304c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 virt-host-validate qemu virsh list","title":"Systemd\u306e\u6709\u52b9\u5316\uff08systemd-genie\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\u203b\u3044\u305a\u308c\u6d88\u3059"},{"location":"infra-001-wsl/#multipass","text":"\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002 KVM\u4eee\u60f3\u5316\u306e\u78ba\u8a8d\u304c\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001 multipass \u306f\u4f7f\u7528\u3067\u304d\u306a\u3044\u3002 sudo snap install multipass sudo snap info multipass \u4eee\u60f3\u30de\u30b7\u30f3\u3092\u8d77\u52d5\u3059\u308b\u3002 multipass find multipass launch --name=sample 22.04 \u4eee\u60f3\u30de\u30b7\u30f3\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3002 mutlpass shell sample exit # \u4eee\u60f3\u30de\u30b7\u30f3\u4e0a\u3067 \u4eee\u60f3\u30de\u30b7\u30f3\u3092\u524a\u9664\u3059\u308b\u3002 multipass delete sample multipass purge","title":"multipass\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"infra-001-wsl/#multipass_1","text":"OS\u30a4\u30e1\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\u969b\u306b\u5916\u90e8\u901a\u4fe1\u304c\u5fc5\u8981\u3068\u306a\u308b\u3002 \u30d7\u30ed\u30ad\u30b7\u74b0\u5883\u5316\u3067\u30a4\u30e1\u30fc\u30b8\u53d6\u5f97\u306b\u5931\u6557\u3059\u308b\u5834\u5408\u306f\u3001multipass\u306e\u5b9f\u884c\u74b0\u5883\u3092\u898b\u76f4\u3059\u3002 systemd\u306e\u5b9f\u884c\u7a7a\u9593\u3067\u30d7\u30ed\u30ad\u30b7\u8a2d\u5b9a\u304c\u306a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001 /etc/systemd/system/snap.multipass.multipassd.service \u3092\u6b21\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u3057\u3001systemd\u3092\u518d\u8d77\u52d5\u3059\u308c\u3070\u52d5\u4f5c\u3059\u308b\u306f\u305a\u3002 [Service] EnvironmentFile = /etc/environment Environment = http_proxy=http://your_proxy Environment = HTTP_PROXY=http://your_proxy Environment = https_proxy=http://your_proxy Environment = HTTPS_PROXY=http://your_proxy","title":"\u30d7\u30ed\u30ad\u30b7\u74b0\u5883\u5316\u306b\u304a\u3051\u308bmultipass"},{"location":"infra-001-wsl/#minikube","text":"https://minikube.sigs.k8s.io/docs/start/ \u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u9032\u3081\u308b\u3002 curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 sudo install minikube-linux-amd64 /usr/local/bin/minikube \u5fc5\u8981\u306b\u5fdc\u3058\u3066minikube\u306e\u69cb\u6210\u3092\u5909\u66f4\u3057\u307e\u3059\u3002 minikube version minikube config set driver docker # minikube config set driver kvm2 minikube config set memory 4096 # \u30c7\u30d5\u30a9\u30eb\u30c8\u306f2048 minikube config set container-runtime cri-o # \u3044\u3089\u306a\u3044 minikube\u3092\u8d77\u52d5\u3059\u308b\u3002 minikube start # \u6307\u5b9a\u304c\u306a\u3044\u3068\u6700\u65b0\u306ekubernetes\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u308b\u304c\u30011.24\u3067\u306f\u554f\u984c\u304c\u751f\u3058\u305f\u306e\u3067\u4efb\u610f\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a # minikube start --kubernetes-version=v1.23.8 kubectl \u3092\u30db\u30b9\u30c8\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 VERSION=$(minikube kubectl version | head -1 | awk -F', ' {'print $3'} | awk -F':' {'print $2'} | sed s/\\\"//g) sudo install ${ HOME } /.minikube/cache/linux/amd64/ ${ VERSION } /kubectl /usr/local/bin kubectl version kubectl \u306e\u4fdd\u7ba1\u3092\u6709\u52b9\u5316\u3059\u308b\u3002 echo \"source <(kubectl completion bash)\" >> ~/.bashrc \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3002 kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.4 kubectl expose deployment hello-minikube --type=NodePort --port=8080 kubectl get services hello-minikube minikube service hello-minikube kubectl port-forward service/hello-minikube 7080:8080 curl http://localhost:7080 # \u5225\u7aef\u672b\u3067 minikube dashboard --port=33400 curl http://localhost:33400 # \u5225\u7aef\u672b\u3067","title":"minikube\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"infra-001-wsl/#krew","text":"\u516c\u5f0f\u624b\u9806\u3092\u53c2\u8003\u306b krew \u3092\u5c0e\u5165\u3059\u308b\u3002 https://krew.sigs.k8s.io/docs/user-guide/setup/install/ echo 'export PATH=\"${KREW_ROOT:-$HOME/.krew}/bin:$PATH\"' >> ~/.bashrc krew\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u8a8d\u8b58\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002 kubectl krew","title":"krew\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"infra-001-wsl/#kubevirt","text":"kubevirt\u516c\u5f0f\u624b\u9806\uff11 \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057kubevirt\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002 export VERSION =$ ( curl - s https : // api . github . com / repos / kubevirt / kubevirt / releases | grep tag_name | grep - v -- '-rc' | sort - r | head - 1 | awk - F ': ' '{print $2}' | sed 's/,//' | xargs ) echo $ VERSION kubectl create - f https : // github . com / kubevirt / kubevirt / releases / download /$ { VERSION } / kubevirt - operator . yaml kubectl create - f https : // github . com / kubevirt / kubevirt / releases / download /$ { VERSION } / kubevirt - cr . yaml kubevirt\u304c\u5c55\u958b\u3055\u308c\u308b\u307e\u3067\u5f85\u3061\u307e\u3059\u3002 kubectl get all -n kubevirt","title":"kubevirt\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"infra-001-wsl/#virtctl","text":"https://krew.sigs.k8s.io/docs/user-guide/setup/install/ VERSION =$ ( kubectl get kubevirt . kubevirt . io / kubevirt - n kubevirt - o = jsonpath = \"{.status.observedKubeVirtVersion}\" ) ARCH =$ ( uname - s | tr A - Z a - z ) -$ ( uname - m | sed 's/x86_64/amd64/' ) || windows - amd64 . exe echo https : // github . com / kubevirt / kubevirt / releases / download /$ { VERSION } / virtctl -$ { VERSION } -$ { ARCH } curl - L - o virtctl https : // github . com / kubevirt / kubevirt / releases / download /$ { VERSION } / virtctl -$ { VERSION } -$ { ARCH } chmod + x virtctl sudo install virtctl / usr / local / bin virtctl version \u30b5\u30f3\u30d7\u30eb\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3002 kubectl apply -f https://kubevirt.io/labs/manifests/vm.yaml kubectl get vms kubectl get vms -o yaml testvm \u4eee\u60f3\u30de\u30b7\u30f3\u3092\u8d77\u52d5\u3059\u308b\u3002 virtctl start testvm \u203b\u73fe\u72b6\u306f\u4eee\u60f3\u30de\u30b7\u30f3\u306e\u8d77\u52d5\u304c\u5931\u6557\u3057\u3066\u3057\u307e\u3044\u3001\u5bfe\u7b56\u3067\u304d\u3066\u3044\u306a\u3044\u3002 \u4eee\u60f3\u30de\u30b7\u30f3\u3092\u505c\u6b62\u3059\u308b\u3002 virtctl stop testvm","title":"Virtctl\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"infra-001-wsl/#_4","text":"","title":"\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0"},{"location":"infra-001-wsl/#ubuntu-2204_2","text":"\u4f55\u3089\u304b\u306e\u7406\u7531\u3067Ubuntu 22.04\u3092\u521d\u671f\u5316\u72b6\u614b\u306b\u623b\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u6b21\u306e\u624b\u9806\u3092Windows\u5074\u3067\u5b9f\u884c\u3059\u308b\u3002 Ubuntu 22.04\u3092\u524a\u9664\u3059\u308b\u3002 wsl -- shutdown wsl -- unregister Ubuntu - 22.04 Docker-Desktop\u3067WSL\u3068\u7d71\u5408\u3057\u305f\u5834\u5408\u306f\u3001 minikube\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304cWidows\u3068\u5171\u6709\u3055\u308c\u3066\u3044\u308b\u3002 \u4e0d\u8981\u306a\u5834\u5408\u306f\u3001minikube\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u524a\u9664\u3059\u308b\u3002 docker ps | grep minikube docker rm minikube Ubuntu 22.04\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 \u304b\u3089\u3084\u308a\u76f4\u3059\u3002","title":"Ubuntu 22.04\u3092\u521d\u671f\u5316\u3057\u305f\u3044"},{"location":"infra-001-wsl/#pyenv","text":"https://github.com/pyenv/pyenv/wiki#suggested-build-environment \u3092\u53c2\u8003\u306b\u524d\u63d0\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \\ libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\ libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev https://github.com/pyenv/pyenv \u3092\u53c2\u8003\u306bpyenv\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 git clone https://github.com/pyenv/pyenv.git ~/.pyenv cd ~/.pyenv && src/configure && make -C src echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/. bashrc echo 'command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/. bashrc echo 'eval \"$(pyenv init -)\"' >> ~/. bashrc \u4efb\u610f\u306epython\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 pyenv install 3.8.6","title":"pyenv\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"infra-001-wsl/#poetry","text":"https://python-poetry.org/docs/ \u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - \u30b7\u30a7\u30eb\u3092\u518d\u8d77\u52d5\u3057\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3002 poetry config virtualenvs.create true poetry config virtualenvs.in-project true","title":"poetry\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"infra-001-wsl/#windows","text":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u512a\u5148\u3059\u308b\uff08\u4ee5\u4e0b\u306e\u307f\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304a\u304f\u3068\u3088\u3044\uff09 \u30a2\u30a4\u30b3\u30f3\u306e\u4ee3\u308f\u308a\u306b\u7e2e\u5c0f\u7248\u3092\u8868\u793a\u3059\u308b \u30b9\u30af\u30ea\u30fc\u30f3\u30d5\u30a9\u30f3\u30c8\u306e\u7e01\u3092\u6ed1\u3089\u304b\u306b\u3059\u308b \u753b\u50cf\u3084\u30c6\u30ad\u30b9\u30c8\u306e\u7e01\u3092\u6ed1\u3089\u304b\u306b\u3059\u308b -> \u30aa\u30d5","title":"\u65b0\u3057\u3044Windows\u3092\u8cb7\u3063\u305f\u3089\u3084\u308b\u3053\u3068"},{"location":"infra-001-wsl/#_5","text":"wsl -- list - v wsl -- shutdown wsl -- unregister Ubuntu - 22.04","title":"\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u524a\u9664"},{"location":"infra-001-wsl/#wsl","text":"https://qiita.com/TsuyoshiUshio@github/items/7a745582bbcd35062430 docker image prune docker container prune docker volume prune wsl --shutdown powershell\u3092\u7ba1\u7406\u8005\u6a29\u9650\u3067\u8d77\u52d5\u3057\u3001windows\u4e0a\u306e vhd* \u30d5\u30a1\u30a4\u30eb\u3092\u691c\u7d22\u3057\u3001\u305d\u308c\u3089\u3057\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u6700\u9069\u5316\u3059\u308b\u3002 cd $HOME\\..\\.. # \u30c9\u30e9\u30a4\u30d6\u30eb\u30fc\u30c8\u306b\u79fb\u52d5 Get-ChildItem -Recurse -Force -ErrorAction SilentlyContinue -Filter \"*.vhdx\" | select FullName, length, LastWriteTime optimize-vhd -Mode full -Path <path>","title":"WSL\u80a5\u5927\u5316\u554f\u984c"},{"location":"python-001-fastapi/","text":"\u5bfe\u8c61\u306e\u8aad\u8005 FastAPI\u3092\u3053\u308c\u304b\u3089\u521d\u3081\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u3066\u3044\u308b\u4eba poetry \u74b0\u5883\u69cb\u7bc9 mkdir sample cd sample poetry init # <\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u60c5\u5831\u3092\u5165\u529b> poetry add fastapi poetry add uvicorn poetry add genson poetry add datamodel-code-generator touch main.py \u30b3\u30fc\u30c9\u3092\u66f8\u304f from fastapi import FastAPI import asyncio app = FastAPI () @app . get ( \"/\" ) async def get_info (): return { \"name\" : \"yamada\" } asyncio awaitable \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\u4e3b\u306b3\u3064\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059 coroutine Task Future import asyncio async def func (): return True loop = asyncio . get_event_loop () print ( type ( func )) #function print ( type ( func ())) #coroutine task = loop . create_task ( get_info ()) print ( task ) # ta","title":"\u8a18\u4e8b02"},{"location":"python-001-fastapi/#_1","text":"FastAPI\u3092\u3053\u308c\u304b\u3089\u521d\u3081\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u3066\u3044\u308b\u4eba poetry","title":"\u5bfe\u8c61\u306e\u8aad\u8005"},{"location":"python-001-fastapi/#_2","text":"mkdir sample cd sample poetry init # <\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u60c5\u5831\u3092\u5165\u529b> poetry add fastapi poetry add uvicorn poetry add genson poetry add datamodel-code-generator touch main.py","title":"\u74b0\u5883\u69cb\u7bc9"},{"location":"python-001-fastapi/#_3","text":"from fastapi import FastAPI import asyncio app = FastAPI () @app . get ( \"/\" ) async def get_info (): return { \"name\" : \"yamada\" }","title":"\u30b3\u30fc\u30c9\u3092\u66f8\u304f"},{"location":"python-001-fastapi/#asyncio","text":"awaitable \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\u4e3b\u306b3\u3064\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059 coroutine Task Future import asyncio async def func (): return True loop = asyncio . get_event_loop () print ( type ( func )) #function print ( type ( func ())) #coroutine task = loop . create_task ( get_info ()) print ( task ) # ta","title":"asyncio"},{"location":"python-002-tools/","text":"\u5bfe\u8c61\u306e\u8aad\u8005 2020/10\u306epython\u4e8b\u60c5\u3092\u77e5\u308a\u305f\u3044\u4eba \u8fd1\u6cc1 2020/10/5\u306b\u3001python3.9\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3002python3.9\u3067\u306f\u3001\u578b\u30d2\u30f3\u30c8\u304ctyping\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u306a\u3057\u306b\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u578b\u30d2\u30f3\u30c8\u3092\u7c21\u5358\u306b\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u305f\u3081\u3001\u7a4d\u6975\u7684\u306b\u79fb\u884c\u3057\u3066\u3044\u304d\u305f\u3044\u3002\u305f\u3060\u3001\u73fe\u6642\u70b9\u3067\u306f\u30013.9\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u591a\u3044\u305f\u3081\u3001\uff13\u30f5\u6708\u5f8c\u306a\u3069\u72b6\u6cc1\u3092\u78ba\u8a8d\u3059\u308b\u306a\u3069\u3001\u79fb\u884c\u6642\u671f\u3092\u898b\u6975\u3081\u3066\u3044\u304d\u305f\u3044\u3002 Web Framework REST API\u3092\u30d9\u30fc\u30b9\u3068\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306a\u3089\u3001Fast API\u4e00\u5f37\u3002Open API Schema\u3084pydantic\u306a\u3069\u3001\u958b\u767a\u306b\u4fbf\u5229\u306a\u30b9\u30bf\u30c3\u30af\u304c\u53d6\u308a\u5165\u308c\u3089\u308c\u3066\u3044\u308b\u3002 html\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u304a\u597d\u307f\u3067\u3002Fast API\u306f\u3001REST API\u7528\u306e\u30b9\u30bf\u30c3\u30af\u3057\u304b\u540c\u68b1\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u74b0\u5883\u69cb\u7bc9\u304c\u9762\u5012\u3002 \u73fe\u5728\u306e\u4e3b\u6d41\u3068\u3057\u3066\u306f\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306fREST API\u5c02\u7528\u3067\u958b\u767a\u3057\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306fReact Vue\u7b49\u3067\u5bfe\u5fdc\u3059\u308b\u3002 Django flask responder fastapi \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u4f5c\u6210\u30c4\u30fc\u30eb typer click \u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406/\u74b0\u5883\u7ba1\u7406 \u4eca\u5f8c\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u4f5c\u6210\u7b49\u304c\u697d\u306aPoetry\u304b\u3002 pip venv pyenv pipenv Poetry \u30b3\u30fc\u30c9\u30c1\u30a7\u30c3\u30af \u30b3\u30fc\u30c9\u30c1\u30a7\u30c3\u30ab\u30fc\u3068\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u3092\u4f75\u7528\u3059\u308b\u3002 \u30b3\u30fc\u30c9\u30c1\u30a7\u30c3\u30ab\u30fc pylint flake8 \u578b\u30c1\u30a7\u30c3\u30ab\u30fc mypy \u30d5\u30a9\u30fc\u30de\u30c3\u30bf autopep8 black isort \u30c6\u30b9\u30c8 unittest pytest database/validator pydantic sqlalchemy Django orm \u6697\u53f7\u5316 RSA \u5171\u901a\u9375\u65b9\u5f0f CSPRNG \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u6e90 UUID","title":"\u8a18\u4e8b03"},{"location":"python-002-tools/#_1","text":"2020/10\u306epython\u4e8b\u60c5\u3092\u77e5\u308a\u305f\u3044\u4eba","title":"\u5bfe\u8c61\u306e\u8aad\u8005"},{"location":"python-002-tools/#_2","text":"2020/10/5\u306b\u3001python3.9\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3002python3.9\u3067\u306f\u3001\u578b\u30d2\u30f3\u30c8\u304ctyping\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u306a\u3057\u306b\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u578b\u30d2\u30f3\u30c8\u3092\u7c21\u5358\u306b\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u305f\u3081\u3001\u7a4d\u6975\u7684\u306b\u79fb\u884c\u3057\u3066\u3044\u304d\u305f\u3044\u3002\u305f\u3060\u3001\u73fe\u6642\u70b9\u3067\u306f\u30013.9\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u591a\u3044\u305f\u3081\u3001\uff13\u30f5\u6708\u5f8c\u306a\u3069\u72b6\u6cc1\u3092\u78ba\u8a8d\u3059\u308b\u306a\u3069\u3001\u79fb\u884c\u6642\u671f\u3092\u898b\u6975\u3081\u3066\u3044\u304d\u305f\u3044\u3002","title":"\u8fd1\u6cc1"},{"location":"python-002-tools/#web-framework","text":"REST API\u3092\u30d9\u30fc\u30b9\u3068\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306a\u3089\u3001Fast API\u4e00\u5f37\u3002Open API Schema\u3084pydantic\u306a\u3069\u3001\u958b\u767a\u306b\u4fbf\u5229\u306a\u30b9\u30bf\u30c3\u30af\u304c\u53d6\u308a\u5165\u308c\u3089\u308c\u3066\u3044\u308b\u3002 html\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u304a\u597d\u307f\u3067\u3002Fast API\u306f\u3001REST API\u7528\u306e\u30b9\u30bf\u30c3\u30af\u3057\u304b\u540c\u68b1\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u74b0\u5883\u69cb\u7bc9\u304c\u9762\u5012\u3002 \u73fe\u5728\u306e\u4e3b\u6d41\u3068\u3057\u3066\u306f\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306fREST API\u5c02\u7528\u3067\u958b\u767a\u3057\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306fReact Vue\u7b49\u3067\u5bfe\u5fdc\u3059\u308b\u3002 Django flask responder fastapi","title":"Web Framework"},{"location":"python-002-tools/#_3","text":"typer click","title":"\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u4f5c\u6210\u30c4\u30fc\u30eb"},{"location":"python-002-tools/#_4","text":"\u4eca\u5f8c\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u4f5c\u6210\u7b49\u304c\u697d\u306aPoetry\u304b\u3002 pip venv pyenv pipenv Poetry","title":"\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406/\u74b0\u5883\u7ba1\u7406"},{"location":"python-002-tools/#_5","text":"\u30b3\u30fc\u30c9\u30c1\u30a7\u30c3\u30ab\u30fc\u3068\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u3092\u4f75\u7528\u3059\u308b\u3002","title":"\u30b3\u30fc\u30c9\u30c1\u30a7\u30c3\u30af"},{"location":"python-002-tools/#_6","text":"pylint flake8","title":"\u30b3\u30fc\u30c9\u30c1\u30a7\u30c3\u30ab\u30fc"},{"location":"python-002-tools/#_7","text":"mypy","title":"\u578b\u30c1\u30a7\u30c3\u30ab\u30fc"},{"location":"python-002-tools/#_8","text":"autopep8 black isort","title":"\u30d5\u30a9\u30fc\u30de\u30c3\u30bf"},{"location":"python-002-tools/#_9","text":"unittest pytest","title":"\u30c6\u30b9\u30c8"},{"location":"python-002-tools/#databasevalidator","text":"pydantic sqlalchemy Django orm","title":"database/validator"},{"location":"python-002-tools/#_10","text":"RSA \u5171\u901a\u9375\u65b9\u5f0f CSPRNG \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u6e90 UUID","title":"\u6697\u53f7\u5316"},{"location":"python-003-designpattarn/","text":"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5fd7\u5411\u306b\u304a\u3051\u308b\u8aa4\u89e3\u3057\u304c\u3061\u306a\u3053\u3068 \u306a\u305c\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u304b https://qiita.com/hayashida-katsutoshi/items/ef2e59219ba0942d3225?utm_content=buffera4033&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer \u55b6\u696d\u306f\u6383\u9664\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u306a\u3069\u306e\u8aa4\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3042\u3063\u305f\u3002 \u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u6697\u9ed9\u7684\u306b\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u306b\u9069\u5408\u3059\u308b\u6c4e\u5316\u306b\u3064\u3044\u3066\u8ff0\u3079\u3089\u308c\u3066\u3044\u308b\u3002 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306b\u304a\u3044\u3066\u3001\u3053\u306e\u55b6\u696d\u306e\u3088\u3046\u306a\u6319\u52d5\u306f\u7981\u6b62\u3055\u308c\u3066\u3044\u306a\u3044\u3002\uff08\u7279\u5316\uff09 \u8ad6\u70b9\u304c\u3054\u3061\u3083\u3054\u3061\u3083\u3067\u3042\u308b\u3002 \u518d\u5229\u7528 \u518d\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3000\u2192\u3000\u518d\u5229\u7528\u3067\u304d\u306a\u304f\u3068\u3082\u3088\u3044\u3000\u2192\u3000\u5177\u4f53\u7684\u306a\u7269\u4e8b\u3092\u6307\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3088\u308a\u5177\u4f53\u7684\u306a\u540d\u79f0\u306b\u3059\u308b\u3079\u304d\u3060\u3002 \u8981\u306f\u30dc\u30c8\u30e0\u30a2\u30d7\u30ed\u30fc\u30c1\u3068\u30c8\u30c3\u30d7\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u3042\u308b\u3002 \u6c4e\u5316\u304b\u3089\u5165\u308b\u306a\u3002\u307e\u305a\u306f\u3001\u7279\u5316\u304b\u3089\u5165\u308c\u3002 \u305d\u306e\u5f8c\u3001\u6c4e\u5316\u3067\u304d\u308b\u304b\u8003\u3048\u308d\u3002 \u518d\u5229\u7528\u3067\u304d\u306a\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30af\u30bd\u3002 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u5168\u3066\u518d\u5229\u7528\u3067\u304d\u308b\u304b\u3089\u5b89\u5fc3\u3057\u308d\u3002 \u4f8b\u306f\u4ee5\u4e0b\u3060\u3002 # \u7279\u5316 # \u3042\u306a\u305f\u306b\u306f\u3001\u5177\u4f53\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u4e0e\u3048\u3089\u308c\u3066\u3044\u308b\u3002\u8a2d\u8a08\u306a\u3069\u5b58\u5728\u305b\u305a\u3001\u305f\u3060\u5b58\u5728\u3057\u3066\u3044\u308b\u3082\u306e\u3002 dog.bowwow() dog.wow() cat.meow() # \u5206\u6790\u306e\u3059\u3048\u3001\u3053\u308c\u306f\u6c4e\u5316\u3057\u3066\u3044\u3044\u3082\u306e\u3060\u3068\u6c17\u3065\u304f\u3002 # \u6c4e\u5316 class MyDog(Dog, Animal): def hello(self): self.hello_bowwow() def hungry(self): self.wow() # \u6c4e\u5316 class MyCat(Cat, Animal): def hello(self): self.hello_nyaaa() def hungry(self): self.hello_nyaaa() animal.hello() dog.cry_bowwow() dog.cry_wow() \u8cac\u4efb\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3057\u308d \u305d\u3093\u306a\u3053\u3068\u306f\u3069\u3046\u3067\u3082\u3088\u3044\u3002\u30d3\u30b8\u30cd\u30b9\u8ab2\u984c\u306b\u5fb9\u3057\u308d\u3002 \u3042\u306a\u305f\u306f\u3001\u30d3\u30b8\u30cd\u30b9\u8ab2\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001\u6700\u77ed\u3067\u6700\u5584\u3060\u3068\u601d\u3046\u624b\u6cd5\u3067\u5b9f\u88c5\u3059\u308c\u3070\u3044\u3044\u3002 class MyDog ( Dog , Animal ): def hello ( self ): self . hello_bowwow () def hungry ( self ): self . wow () def is_hungry ( self ): self . hp < 10","title":"\u8a18\u4e8b04"},{"location":"python-003-designpattarn/#_1","text":"","title":"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5fd7\u5411\u306b\u304a\u3051\u308b\u8aa4\u89e3\u3057\u304c\u3061\u306a\u3053\u3068"},{"location":"python-003-designpattarn/#_2","text":"https://qiita.com/hayashida-katsutoshi/items/ef2e59219ba0942d3225?utm_content=buffera4033&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer \u55b6\u696d\u306f\u6383\u9664\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u306a\u3069\u306e\u8aa4\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3042\u3063\u305f\u3002 \u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u6697\u9ed9\u7684\u306b\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u306b\u9069\u5408\u3059\u308b\u6c4e\u5316\u306b\u3064\u3044\u3066\u8ff0\u3079\u3089\u308c\u3066\u3044\u308b\u3002 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306b\u304a\u3044\u3066\u3001\u3053\u306e\u55b6\u696d\u306e\u3088\u3046\u306a\u6319\u52d5\u306f\u7981\u6b62\u3055\u308c\u3066\u3044\u306a\u3044\u3002\uff08\u7279\u5316\uff09 \u8ad6\u70b9\u304c\u3054\u3061\u3083\u3054\u3061\u3083\u3067\u3042\u308b\u3002","title":"\u306a\u305c\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u304b"},{"location":"python-003-designpattarn/#_3","text":"\u518d\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3000\u2192\u3000\u518d\u5229\u7528\u3067\u304d\u306a\u304f\u3068\u3082\u3088\u3044\u3000\u2192\u3000\u5177\u4f53\u7684\u306a\u7269\u4e8b\u3092\u6307\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3088\u308a\u5177\u4f53\u7684\u306a\u540d\u79f0\u306b\u3059\u308b\u3079\u304d\u3060\u3002 \u8981\u306f\u30dc\u30c8\u30e0\u30a2\u30d7\u30ed\u30fc\u30c1\u3068\u30c8\u30c3\u30d7\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u3042\u308b\u3002 \u6c4e\u5316\u304b\u3089\u5165\u308b\u306a\u3002\u307e\u305a\u306f\u3001\u7279\u5316\u304b\u3089\u5165\u308c\u3002 \u305d\u306e\u5f8c\u3001\u6c4e\u5316\u3067\u304d\u308b\u304b\u8003\u3048\u308d\u3002 \u518d\u5229\u7528\u3067\u304d\u306a\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30af\u30bd\u3002 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u5168\u3066\u518d\u5229\u7528\u3067\u304d\u308b\u304b\u3089\u5b89\u5fc3\u3057\u308d\u3002 \u4f8b\u306f\u4ee5\u4e0b\u3060\u3002 # \u7279\u5316 # \u3042\u306a\u305f\u306b\u306f\u3001\u5177\u4f53\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u4e0e\u3048\u3089\u308c\u3066\u3044\u308b\u3002\u8a2d\u8a08\u306a\u3069\u5b58\u5728\u305b\u305a\u3001\u305f\u3060\u5b58\u5728\u3057\u3066\u3044\u308b\u3082\u306e\u3002 dog.bowwow() dog.wow() cat.meow() # \u5206\u6790\u306e\u3059\u3048\u3001\u3053\u308c\u306f\u6c4e\u5316\u3057\u3066\u3044\u3044\u3082\u306e\u3060\u3068\u6c17\u3065\u304f\u3002 # \u6c4e\u5316 class MyDog(Dog, Animal): def hello(self): self.hello_bowwow() def hungry(self): self.wow() # \u6c4e\u5316 class MyCat(Cat, Animal): def hello(self): self.hello_nyaaa() def hungry(self): self.hello_nyaaa() animal.hello() dog.cry_bowwow() dog.cry_wow()","title":"\u518d\u5229\u7528"},{"location":"python-003-designpattarn/#_4","text":"\u305d\u3093\u306a\u3053\u3068\u306f\u3069\u3046\u3067\u3082\u3088\u3044\u3002\u30d3\u30b8\u30cd\u30b9\u8ab2\u984c\u306b\u5fb9\u3057\u308d\u3002 \u3042\u306a\u305f\u306f\u3001\u30d3\u30b8\u30cd\u30b9\u8ab2\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001\u6700\u77ed\u3067\u6700\u5584\u3060\u3068\u601d\u3046\u624b\u6cd5\u3067\u5b9f\u88c5\u3059\u308c\u3070\u3044\u3044\u3002 class MyDog ( Dog , Animal ): def hello ( self ): self . hello_bowwow () def hungry ( self ): self . wow () def is_hungry ( self ): self . hp < 10","title":"\u8cac\u4efb\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3057\u308d"},{"location":"python-004-pycharmdocker/","text":"\u5bfe\u8c61\u8aad\u8005 PyCharm + docker\u3000\uff0b fastapi\u3067\u958b\u767a\u3092\u3057\u305f\u3044\u65b9 Pycharm\u5229\u7528\u30e6\u30fc\u30b6\u30fc\uff08VS Code\u306e\u65b9\u304cdocker\u306e\u6271\u3044\u306f\u512a\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u305d\u308c\u3067\u3082PyCharm\u3067docker\u3092\u4f7f\u3044\u305f\u3044\u65b9\u304c\u5bfe\u8c61\u3067\u3059\u3002\uff09 fastapi\u306b\u95a2\u3059\u308b\u6559\u990a\u304c\u3042\u308b\u7a0b\u5ea6\u3042\u308b\u65b9 Docker\u306b\u95a2\u3059\u308b\u6559\u990a\u304c\u3042\u308b\u7a0b\u5ea6\u3042\u308b\u65b9 \u7b46\u8005\u958b\u767a\u74b0\u5883 \u7b46\u8005\u306e\u958b\u767a\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\uff08Windows Mac\u7b49\u306e\u52d5\u4f5c\u306f\u691c\u8a3c\u3057\u3066\u3044\u307e\u305b\u3093\u3002\uff09 ubuntu 20.04 PyCharm x.x.x fastapi pytest \u89e3\u6c7a\u3057\u305f\u3044\u554f\u984c PyCharm\u3067\u306f\u3001docker\u3092\u5229\u7528\u3057\u305f\u958b\u767a\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4e0d\u61ab\u306a\u70b9\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002 docker\u74b0\u5883\u4e0a\u306b\u8ffd\u52a0\u3055\u308c\u305fpackage\u3092\u81ea\u52d5\u8a8d\u8b58\u3067\u304d\u306a\u3044\uff08docker\u30a4\u30e1\u30fc\u30b8\u306e\u518d\u30d3\u30eb\u30c9\u304c\u5fc5\u8981\u3002VS Code\u3067\u306f\u518d\u30d3\u30eb\u30c9\u306f\u5fc5\u8981\u306a\u3044\u3088\u3046\u3067\u3059\u3002\uff09 docker\u74b0\u5883\u4e0a\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001\u30db\u30b9\u30c8\u4e0a\u3068\u7570\u306a\u308b\u30e6\u30fc\u30b6\u30fc\u3067\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u3001\u30db\u30b9\u30c8\u4e0a\u3067\u6a29\u9650\u304c\u6b20\u843d\u3059\u308b \u30c7\u30d0\u30c3\u30b0\u3084pytest\u5b9f\u884c\u6642\u3001pycharm\u304cdocker\u30a4\u30e1\u30fc\u30b8\u3092\u518d\u8d77\u52d5\u3059\u308b\u305f\u3081\u8d77\u52d5\u6642\u9593\u304c\u30b9\u30c8\u30ec\u30b9\u306b\u306a\u308b \u3053\u306e\u3088\u3046\u306a\u554f\u984c\u304c\u3042\u308a\u3001docker\u3092\u5229\u7528\u3057\u305f\u958b\u767a\u3092\u8ae6\u3081\u305f\u65b9\u3082\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002 \u672c\u8a18\u4e8b\u3067\u306f\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306a\u4e0d\u61ab\u306a\u70b9\u3092\u89e3\u6c7a\u3067\u304d\u308b\u3088\u3046\u306b\u52aa\u3081\u3066\u3044\u307e\u3059\u3002 \u89e3\u6c7a\u3057\u3066\u3044\u306a\u3044\u554f\u984c docker\u74b0\u5883\u4e0a\u3067\u8ffd\u52a0\u3055\u308c\u305fpackage\u3092\u81ea\u52d5\u8a8d\u8b58\u3067\u304d\u306a\u3044 \u30db\u30b9\u30c8\u4e0a\u306epython\u306e\u4eee\u60f3\u74b0\u5883\u3092\u53c2\u7167\u3057\u3001docker\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u540c\u671f\u3059\u308c\u3070\u4f55\u3068\u304b\u306a\u308a\u305d\u3046\u3067\u3059\u304c\u3001\u52b4\u529b\u304c\u5927\u304d\u305d\u3046\u306a\u306e\u3067\u4eca\u56de\u306f\u898b\u9001\u308a\u3057\u307e\u3057\u305fm( )m PyCharm\u306ejupyter notebook\u306b\u95a2\u3059\u308b\u6a5f\u80fd\u304c\u5229\u7528\u3067\u304d\u306a\u3044 \u73fe\u72b6\u3001PyCharm\u306f\u30ea\u30e2\u30fc\u30c8\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u4e0a\u3067jupyter notebook\u3092\u5229\u7528\u3067\u304d\u306a\u3044\u305f\u3081\u3001jupyter notebook\u672c\u4f53\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u7d50\u5c40\u3069\u3046\u3044\u3046\u958b\u767a\u74b0\u5883\u304c\u69cb\u7bc9\u3067\u304d\u308b\u306e\uff1f \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u306e\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9 swagger-ui \u3092\u5229\u7528\u3057\u305f\u6a5f\u80fd\u691c docker\u30a4\u30e1\u30fc\u30b8\u3092\u518d\u30d3\u30eb\u30c9\u305b\u305a\u306bpytest\u3092\u8d77\u52d5\u30fb\u30c7\u30d0\u30c3\u30b0 jupyter\u306b\u3088\u308b\u6a5f\u80fd\u691c\u8a3c (\u304a\u307e\u3051)frontend\u3067\u5229\u7528\u3059\u308bapi client\u306e\u81ea\u52d5\u751f\u6210 \u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9 docker\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\u30fb\u6a29\u9650\u8a2d\u5b9a \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\u306e\u8a2d\u5b9a \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068docker\u74b0\u5883\u4e0a\u306e\u30d5\u30a1\u30a4\u30eb\u540c\u671f \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210 \u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u3067\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\uff08\u30b7\u30a7\u30eb\u7d4c\u7531\u3060\u3068\u3001pycharm\u304cpython\u30b3\u30fc\u30c9\u3092\u6355\u6349\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u5b9f\u884c\u3059\u308b\uff09 \u958b\u767a\u74b0\u5883\u306e\u5229\u7528\u65b9\u6cd5 \u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u306e\u5229\u7528 pytest\u306e\u5b9f\u884c \u30b3\u30f3\u30c6\u30ca\u3078\u306e\u5165\u308a\u65b9 \u30d1\u30c3\u30b1\u30fc\u30b8\u8ffd\u52a0\u6642\uff08\uff09 jupyter\u74b0\u5883\u306e\u69cb\u7bc9\u30fb\u88dc\u5b8c\u6709\u52b9\u5316\u30aa\u30d7\u30b7\u30e7\u30f3 sudo jupyter contrib nbextension install sudo jupyter nbextensions_configurator enable # sudo jupyter notebook --ip=0.0.0.0 --allow-root --notebook-dir jupyter sudo jupyter notebook --ip=0.0.0.0 --allow-root --notebook-dir=jupyter --NotebookApp.token='' --NotebookApp.password='' \u3053\u308c\u304c\u6700\u5f37\u3060\u3068\u601d\u3044\u307e\u3059\u3002 \u96db\u5f62\u4f5c\u308b\u3088 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210 \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067\u3001\u4efb\u610f\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 mkdir fastapi_template cd fastapi_template \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067Python\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Compatible Python versions \u306f\u4efb\u610f\u306ePython\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u304f\u3060\u3055\u3044\u3002 \u305d\u308c\u4ee5\u5916\u306f\u3001\u3068\u308a\u3042\u3048\u305a\u305d\u306e\u307e\u307e\u3067\u5927\u4e08\u592b\u3067\u3059\u3002 poetry init # Package name [fastapi_template]: # Version [0.1.0]: # Description []: # Author [yourname <yourname@example.com>, n to skip]: # License []: # Compatible Python versions [^3.8] \u30d1\u30c3\u30b1\u30fc\u30b8\u8ffd\u52a0 \u307e\u305a\u306f\u3001fastapi\u95a2\u9023\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\u3002 poetry add fastapi poetry add uvicorn \u958b\u767a\u652f\u63f4\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\u3002 poetry add -D black # \u81ea\u52d5\u30b3\u30fc\u30c9\u30d5\u30a9\u30fc\u30de\u30c3\u30bf poetry add -D isort # \u81ea\u52d5\u30a4\u30f3\u30dd\u30fc\u30c8\u6587\u30d5\u30a9\u30fc\u30de\u30c3\u30bf poetry add -D flake8 # pep8\u306b\u57fa\u3065\u304f\u30b3\u30fc\u30c9\u30c1\u30a7\u30c3\u30ab\u30fc poetry add -D mypy # \u578b\u30c1\u30a7\u30c3\u30ab\u30fc \u30d1\u30c3\u30b1\u30fc\u30b8\u8ffd\u52a0\u6642\u306b\u4eee\u60f3\u74b0\u5883\u304c\u4f5c\u6210\u3055\u308c\u308b\u304c\u3001\u4eca\u56de\u306fdocker\u3092\u5229\u7528\u3059\u308b\u306e\u3067\u524a\u9664\u3059\u308b\u3002 # \u30d1\u30c3\u30b1\u30fc\u30b8\u8ffd\u52a0\u6642\u306b\u6b21\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a # Creating virtualenv <project_name> in /home/user_name/PycharmProjects/<project_name>/.venv rm -rf xxxxx poetry.lock\u3067\u8ffd\u52a0\u3057\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u3092requirements.txt\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u3002 # poetry.lock\u3092\u3001requirements.txt\u306e\u5f62\u5f0f\u306e\u3001requirements.txt\u3092\u51fa\u529b\u3059\u308b poetry export -f requirements.txt > requirements.txt dockerfile\u4f5c\u6210 cat <<EOS > Dockerfile FROM python:3.8 RUN apt-get update RUN apt-get install -y vim RUN pip3 install -U pip && pip3 install --no-cache-dir poetry RUN poetry config virtualenvs.create false && \\ poetry config virtualenvs.in-project false WORKDIR /app/ COPY ./pyproject.toml / COPY ./poetry.lock* / RUN poetry install EXPOSE 8080 EOS cat <<EOS > docker-compose.yml version: '3' services: fastapi: build: context: . dockerfile: Dockerfile ports: - \"8080:8080\" volumes: - .:/app:rw EOS \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9 cat <<EOS > main.py from fastapi import FastAPI app = FastAPI() if __name__ == \"__main__\": import uvicorn uvicorn.run(\"main:app\", host=\"0.0.0.0\", port=8080, reload=True) EOS docker build docker-compose up -d --build pycharm\u3092\u958b\u304f projectinterpreter\u306bdocker-compose\u3092\u6307\u5b9a configuration\u3067\u30c7\u30d0\u30c3\u30b0\u8a2d\u5b9a\u3092\u884c\u3046 Services -> Log \u3067\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u898b\u308c\u308b\u305e \u8d77\u52d5 main\u3092\u30c7\u30d0\u30c3\u30b0\u5b9f\u884c http://0.0.0.0:8080/docs#/ \u30ea\u30ed\u30fc\u30c9\u3092\u305f\u3081\u305d\u3046 \u30ed\u30fc\u30ab\u30eb\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3059\u308b\u3068\u3001\u5909\u66f4\u3092\u691c\u77e5\u3057\u3066\u30b5\u30fc\u30d0\u304c\u518d\u8d77\u52d5\u3059\u308b\u306e\u3067F5\u3067\u753b\u9762\u3092\u66f4\u65b0\u3057\u3066\u307f\u3088\u3046\u3002 cat <<EOS > main.py from fastapi import FastAPI app = FastAPI() @app.get(\"/hello\") def get_hello(): return \"hello\" if __name__ == \"__main__\": import uvicorn uvicorn.run(\"main:app\", host=\"0.0.0.0\", port=8080, reload=True) EOS \u30b3\u30f3\u30c6\u30ca\u306b\u5165\u3063\u3066\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u30bd\u30fc\u30b9\u3092\u4fee\u6b63\u3057\u3066\u307f\u3088\u3046\u3002 \u30b5\u30fc\u30d0\u304c\u518d\u8d77\u52d5\u3057\u305f\u4e0a\u306b\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u30de\u30a6\u30f3\u30c8\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u30ed\u30fc\u30ab\u30eb\u5074\u306e\u30d5\u30a1\u30a4\u30eb\u3082\u4fee\u6b63\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002 cat <<EOS > main.py from fastapi import FastAPI app = FastAPI() @app.get(\"/hello\") def get_hello(): return \"hello\" if __name__ == \"__main__\": import uvicorn uvicorn.run(\"main:app\", host=\"0.0.0.0\", port=8080, reload=True) EOS \u30c7\u30d0\u30c3\u30b0\u3057\u3066\u307f\u3088\u3046 \u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u8cbc\u3063\u3066\u3001\u6b62\u307e\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002 VSCode\u306b\u3088\u308b\u958b\u767a \u4eee\u60f3\u74b0\u5883 docker \u6982\u8981 \u62e1\u5f35\u6a5f\u80fd\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30b3\u30fc\u30c9\u306e\u5b9f\u884c \u30a2\u30d7\u30ea\u5b9f\u884c \u30c7\u30d0\u30c3\u30b0\uff08\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\uff09 docker\u5b9f\u884c \u53c2\u8003\u30b5\u30a4\u30c8 \u5fc5\u8981\u306a\u62e1\u5f35\u6a5f\u80fd Python Python for VSCode Remote-Containers Python for VSCode Python\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u3092\u652f\u63f4\u3057\u307e\u3059\u3002 Supports syntax highlighting, snippets and linting (see requirements below). Linting can be customised with a .pylintrc(pyLint) or setup.cfg(flake8) file in the root of the current working directory Django\u307e\u305f\u306fFlask\u30a2\u30d7\u30ea\u3067\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3059\u308b\u65b9\u6cd5 https://code.visualstudio.com/docs/containers/debug-python#_how-to-enable-hot-reloading-in-django-or-flask-apps \u30c7\u30d0\u30c3\u30b0\u3059\u308b\u306b\u306f \u753b\u9762\u5de6\u306b\u30c7\u30d0\u30c3\u30b0\u30a2\u30a4\u30b3\u30f3\u304c\u3042\u308b\u3002 \u5b9f\u884c\u3068\u30c7\u30d0\u30c3\u30b0\u304b\u3089\u4efb\u610f\u306e\u5b9f\u884c\u65b9\u5f0f\u3092\u9078\u629e\u3059\u308b\u3002 launch.json\u3068\u306f \u5b9f\u884c\u3092\u65b9\u6cd5\u3092\u8a73\u3057\u304f\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u3001launch.json\u3092\u4f5c\u6210\u3059\u308b\u3002 .vscode\u30d5\u30a9\u30eb\u30c0\u5185\u306b\u4f5c\u6210\u3055\u308c\u308b\u3002 Pytest\u3059\u308b\u306b\u306f","title":"\u8a18\u4e8b05"},{"location":"python-004-pycharmdocker/#_1","text":"PyCharm + docker\u3000\uff0b fastapi\u3067\u958b\u767a\u3092\u3057\u305f\u3044\u65b9 Pycharm\u5229\u7528\u30e6\u30fc\u30b6\u30fc\uff08VS Code\u306e\u65b9\u304cdocker\u306e\u6271\u3044\u306f\u512a\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u305d\u308c\u3067\u3082PyCharm\u3067docker\u3092\u4f7f\u3044\u305f\u3044\u65b9\u304c\u5bfe\u8c61\u3067\u3059\u3002\uff09 fastapi\u306b\u95a2\u3059\u308b\u6559\u990a\u304c\u3042\u308b\u7a0b\u5ea6\u3042\u308b\u65b9 Docker\u306b\u95a2\u3059\u308b\u6559\u990a\u304c\u3042\u308b\u7a0b\u5ea6\u3042\u308b\u65b9","title":"\u5bfe\u8c61\u8aad\u8005"},{"location":"python-004-pycharmdocker/#_2","text":"\u7b46\u8005\u306e\u958b\u767a\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\uff08Windows Mac\u7b49\u306e\u52d5\u4f5c\u306f\u691c\u8a3c\u3057\u3066\u3044\u307e\u305b\u3093\u3002\uff09 ubuntu 20.04 PyCharm x.x.x fastapi pytest","title":"\u7b46\u8005\u958b\u767a\u74b0\u5883"},{"location":"python-004-pycharmdocker/#_3","text":"PyCharm\u3067\u306f\u3001docker\u3092\u5229\u7528\u3057\u305f\u958b\u767a\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4e0d\u61ab\u306a\u70b9\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002 docker\u74b0\u5883\u4e0a\u306b\u8ffd\u52a0\u3055\u308c\u305fpackage\u3092\u81ea\u52d5\u8a8d\u8b58\u3067\u304d\u306a\u3044\uff08docker\u30a4\u30e1\u30fc\u30b8\u306e\u518d\u30d3\u30eb\u30c9\u304c\u5fc5\u8981\u3002VS Code\u3067\u306f\u518d\u30d3\u30eb\u30c9\u306f\u5fc5\u8981\u306a\u3044\u3088\u3046\u3067\u3059\u3002\uff09 docker\u74b0\u5883\u4e0a\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001\u30db\u30b9\u30c8\u4e0a\u3068\u7570\u306a\u308b\u30e6\u30fc\u30b6\u30fc\u3067\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u3001\u30db\u30b9\u30c8\u4e0a\u3067\u6a29\u9650\u304c\u6b20\u843d\u3059\u308b \u30c7\u30d0\u30c3\u30b0\u3084pytest\u5b9f\u884c\u6642\u3001pycharm\u304cdocker\u30a4\u30e1\u30fc\u30b8\u3092\u518d\u8d77\u52d5\u3059\u308b\u305f\u3081\u8d77\u52d5\u6642\u9593\u304c\u30b9\u30c8\u30ec\u30b9\u306b\u306a\u308b \u3053\u306e\u3088\u3046\u306a\u554f\u984c\u304c\u3042\u308a\u3001docker\u3092\u5229\u7528\u3057\u305f\u958b\u767a\u3092\u8ae6\u3081\u305f\u65b9\u3082\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002 \u672c\u8a18\u4e8b\u3067\u306f\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306a\u4e0d\u61ab\u306a\u70b9\u3092\u89e3\u6c7a\u3067\u304d\u308b\u3088\u3046\u306b\u52aa\u3081\u3066\u3044\u307e\u3059\u3002","title":"\u89e3\u6c7a\u3057\u305f\u3044\u554f\u984c"},{"location":"python-004-pycharmdocker/#_4","text":"","title":"\u89e3\u6c7a\u3057\u3066\u3044\u306a\u3044\u554f\u984c"},{"location":"python-004-pycharmdocker/#dockerpackage","text":"\u30db\u30b9\u30c8\u4e0a\u306epython\u306e\u4eee\u60f3\u74b0\u5883\u3092\u53c2\u7167\u3057\u3001docker\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u540c\u671f\u3059\u308c\u3070\u4f55\u3068\u304b\u306a\u308a\u305d\u3046\u3067\u3059\u304c\u3001\u52b4\u529b\u304c\u5927\u304d\u305d\u3046\u306a\u306e\u3067\u4eca\u56de\u306f\u898b\u9001\u308a\u3057\u307e\u3057\u305fm( )m","title":"docker\u74b0\u5883\u4e0a\u3067\u8ffd\u52a0\u3055\u308c\u305fpackage\u3092\u81ea\u52d5\u8a8d\u8b58\u3067\u304d\u306a\u3044"},{"location":"python-004-pycharmdocker/#pycharmjupyter-notebook","text":"\u73fe\u72b6\u3001PyCharm\u306f\u30ea\u30e2\u30fc\u30c8\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u4e0a\u3067jupyter notebook\u3092\u5229\u7528\u3067\u304d\u306a\u3044\u305f\u3081\u3001jupyter notebook\u672c\u4f53\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"PyCharm\u306ejupyter notebook\u306b\u95a2\u3059\u308b\u6a5f\u80fd\u304c\u5229\u7528\u3067\u304d\u306a\u3044"},{"location":"python-004-pycharmdocker/#_5","text":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u306e\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9 swagger-ui \u3092\u5229\u7528\u3057\u305f\u6a5f\u80fd\u691c docker\u30a4\u30e1\u30fc\u30b8\u3092\u518d\u30d3\u30eb\u30c9\u305b\u305a\u306bpytest\u3092\u8d77\u52d5\u30fb\u30c7\u30d0\u30c3\u30b0 jupyter\u306b\u3088\u308b\u6a5f\u80fd\u691c\u8a3c (\u304a\u307e\u3051)frontend\u3067\u5229\u7528\u3059\u308bapi client\u306e\u81ea\u52d5\u751f\u6210","title":"\u7d50\u5c40\u3069\u3046\u3044\u3046\u958b\u767a\u74b0\u5883\u304c\u69cb\u7bc9\u3067\u304d\u308b\u306e\uff1f"},{"location":"python-004-pycharmdocker/#_6","text":"docker\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\u30fb\u6a29\u9650\u8a2d\u5b9a \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30a4\u30f3\u30bf\u30fc\u30d7\u30ea\u30bf\u306e\u8a2d\u5b9a \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068docker\u74b0\u5883\u4e0a\u306e\u30d5\u30a1\u30a4\u30eb\u540c\u671f \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210 \u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u3067\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\uff08\u30b7\u30a7\u30eb\u7d4c\u7531\u3060\u3068\u3001pycharm\u304cpython\u30b3\u30fc\u30c9\u3092\u6355\u6349\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u5b9f\u884c\u3059\u308b\uff09","title":"\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9"},{"location":"python-004-pycharmdocker/#_7","text":"\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u306e\u5229\u7528 pytest\u306e\u5b9f\u884c \u30b3\u30f3\u30c6\u30ca\u3078\u306e\u5165\u308a\u65b9 \u30d1\u30c3\u30b1\u30fc\u30b8\u8ffd\u52a0\u6642\uff08\uff09 jupyter\u74b0\u5883\u306e\u69cb\u7bc9\u30fb\u88dc\u5b8c\u6709\u52b9\u5316\u30aa\u30d7\u30b7\u30e7\u30f3 sudo jupyter contrib nbextension install sudo jupyter nbextensions_configurator enable # sudo jupyter notebook --ip=0.0.0.0 --allow-root --notebook-dir jupyter sudo jupyter notebook --ip=0.0.0.0 --allow-root --notebook-dir=jupyter --NotebookApp.token='' --NotebookApp.password='' \u3053\u308c\u304c\u6700\u5f37\u3060\u3068\u601d\u3044\u307e\u3059\u3002","title":"\u958b\u767a\u74b0\u5883\u306e\u5229\u7528\u65b9\u6cd5"},{"location":"python-004-pycharmdocker/#_8","text":"","title":"\u96db\u5f62\u4f5c\u308b\u3088"},{"location":"python-004-pycharmdocker/#_9","text":"\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067\u3001\u4efb\u610f\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 mkdir fastapi_template cd fastapi_template \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067Python\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Compatible Python versions \u306f\u4efb\u610f\u306ePython\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u304f\u3060\u3055\u3044\u3002 \u305d\u308c\u4ee5\u5916\u306f\u3001\u3068\u308a\u3042\u3048\u305a\u305d\u306e\u307e\u307e\u3067\u5927\u4e08\u592b\u3067\u3059\u3002 poetry init # Package name [fastapi_template]: # Version [0.1.0]: # Description []: # Author [yourname <yourname@example.com>, n to skip]: # License []: # Compatible Python versions [^3.8]","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210"},{"location":"python-004-pycharmdocker/#_10","text":"\u307e\u305a\u306f\u3001fastapi\u95a2\u9023\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\u3002 poetry add fastapi poetry add uvicorn \u958b\u767a\u652f\u63f4\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\u3002 poetry add -D black # \u81ea\u52d5\u30b3\u30fc\u30c9\u30d5\u30a9\u30fc\u30de\u30c3\u30bf poetry add -D isort # \u81ea\u52d5\u30a4\u30f3\u30dd\u30fc\u30c8\u6587\u30d5\u30a9\u30fc\u30de\u30c3\u30bf poetry add -D flake8 # pep8\u306b\u57fa\u3065\u304f\u30b3\u30fc\u30c9\u30c1\u30a7\u30c3\u30ab\u30fc poetry add -D mypy # \u578b\u30c1\u30a7\u30c3\u30ab\u30fc \u30d1\u30c3\u30b1\u30fc\u30b8\u8ffd\u52a0\u6642\u306b\u4eee\u60f3\u74b0\u5883\u304c\u4f5c\u6210\u3055\u308c\u308b\u304c\u3001\u4eca\u56de\u306fdocker\u3092\u5229\u7528\u3059\u308b\u306e\u3067\u524a\u9664\u3059\u308b\u3002 # \u30d1\u30c3\u30b1\u30fc\u30b8\u8ffd\u52a0\u6642\u306b\u6b21\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a # Creating virtualenv <project_name> in /home/user_name/PycharmProjects/<project_name>/.venv rm -rf xxxxx poetry.lock\u3067\u8ffd\u52a0\u3057\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u3092requirements.txt\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u3002 # poetry.lock\u3092\u3001requirements.txt\u306e\u5f62\u5f0f\u306e\u3001requirements.txt\u3092\u51fa\u529b\u3059\u308b poetry export -f requirements.txt > requirements.txt","title":"\u30d1\u30c3\u30b1\u30fc\u30b8\u8ffd\u52a0"},{"location":"python-004-pycharmdocker/#dockerfile","text":"cat <<EOS > Dockerfile FROM python:3.8 RUN apt-get update RUN apt-get install -y vim RUN pip3 install -U pip && pip3 install --no-cache-dir poetry RUN poetry config virtualenvs.create false && \\ poetry config virtualenvs.in-project false WORKDIR /app/ COPY ./pyproject.toml / COPY ./poetry.lock* / RUN poetry install EXPOSE 8080 EOS cat <<EOS > docker-compose.yml version: '3' services: fastapi: build: context: . dockerfile: Dockerfile ports: - \"8080:8080\" volumes: - .:/app:rw EOS","title":"dockerfile\u4f5c\u6210"},{"location":"python-004-pycharmdocker/#_11","text":"cat <<EOS > main.py from fastapi import FastAPI app = FastAPI() if __name__ == \"__main__\": import uvicorn uvicorn.run(\"main:app\", host=\"0.0.0.0\", port=8080, reload=True) EOS","title":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9"},{"location":"python-004-pycharmdocker/#docker-build","text":"docker-compose up -d --build","title":"docker build"},{"location":"python-004-pycharmdocker/#pycharm","text":"projectinterpreter\u306bdocker-compose\u3092\u6307\u5b9a configuration\u3067\u30c7\u30d0\u30c3\u30b0\u8a2d\u5b9a\u3092\u884c\u3046 Services -> Log \u3067\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u898b\u308c\u308b\u305e","title":"pycharm\u3092\u958b\u304f"},{"location":"python-004-pycharmdocker/#_12","text":"main\u3092\u30c7\u30d0\u30c3\u30b0\u5b9f\u884c http://0.0.0.0:8080/docs#/","title":"\u8d77\u52d5"},{"location":"python-004-pycharmdocker/#_13","text":"\u30ed\u30fc\u30ab\u30eb\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3059\u308b\u3068\u3001\u5909\u66f4\u3092\u691c\u77e5\u3057\u3066\u30b5\u30fc\u30d0\u304c\u518d\u8d77\u52d5\u3059\u308b\u306e\u3067F5\u3067\u753b\u9762\u3092\u66f4\u65b0\u3057\u3066\u307f\u3088\u3046\u3002 cat <<EOS > main.py from fastapi import FastAPI app = FastAPI() @app.get(\"/hello\") def get_hello(): return \"hello\" if __name__ == \"__main__\": import uvicorn uvicorn.run(\"main:app\", host=\"0.0.0.0\", port=8080, reload=True) EOS \u30b3\u30f3\u30c6\u30ca\u306b\u5165\u3063\u3066\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u30bd\u30fc\u30b9\u3092\u4fee\u6b63\u3057\u3066\u307f\u3088\u3046\u3002 \u30b5\u30fc\u30d0\u304c\u518d\u8d77\u52d5\u3057\u305f\u4e0a\u306b\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u30de\u30a6\u30f3\u30c8\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u30ed\u30fc\u30ab\u30eb\u5074\u306e\u30d5\u30a1\u30a4\u30eb\u3082\u4fee\u6b63\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002 cat <<EOS > main.py from fastapi import FastAPI app = FastAPI() @app.get(\"/hello\") def get_hello(): return \"hello\" if __name__ == \"__main__\": import uvicorn uvicorn.run(\"main:app\", host=\"0.0.0.0\", port=8080, reload=True) EOS","title":"\u30ea\u30ed\u30fc\u30c9\u3092\u305f\u3081\u305d\u3046"},{"location":"python-004-pycharmdocker/#_14","text":"\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u8cbc\u3063\u3066\u3001\u6b62\u307e\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002","title":"\u30c7\u30d0\u30c3\u30b0\u3057\u3066\u307f\u3088\u3046"},{"location":"python-004-pycharmdocker/#vscode","text":"\u4eee\u60f3\u74b0\u5883 docker","title":"VSCode\u306b\u3088\u308b\u958b\u767a"},{"location":"python-004-pycharmdocker/#_15","text":"\u62e1\u5f35\u6a5f\u80fd\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30b3\u30fc\u30c9\u306e\u5b9f\u884c \u30a2\u30d7\u30ea\u5b9f\u884c \u30c7\u30d0\u30c3\u30b0\uff08\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\uff09 docker\u5b9f\u884c","title":"\u6982\u8981"},{"location":"python-004-pycharmdocker/#_16","text":"","title":"\u53c2\u8003\u30b5\u30a4\u30c8"},{"location":"python-004-pycharmdocker/#_17","text":"Python Python for VSCode Remote-Containers","title":"\u5fc5\u8981\u306a\u62e1\u5f35\u6a5f\u80fd"},{"location":"python-004-pycharmdocker/#python-for-vscode","text":"Python\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u3092\u652f\u63f4\u3057\u307e\u3059\u3002 Supports syntax highlighting, snippets and linting (see requirements below). Linting can be customised with a .pylintrc(pyLint) or setup.cfg(flake8) file in the root of the current working directory","title":"Python for VSCode"},{"location":"python-004-pycharmdocker/#djangoflask","text":"https://code.visualstudio.com/docs/containers/debug-python#_how-to-enable-hot-reloading-in-django-or-flask-apps","title":"Django\u307e\u305f\u306fFlask\u30a2\u30d7\u30ea\u3067\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3059\u308b\u65b9\u6cd5"},{"location":"python-004-pycharmdocker/#_18","text":"\u753b\u9762\u5de6\u306b\u30c7\u30d0\u30c3\u30b0\u30a2\u30a4\u30b3\u30f3\u304c\u3042\u308b\u3002 \u5b9f\u884c\u3068\u30c7\u30d0\u30c3\u30b0\u304b\u3089\u4efb\u610f\u306e\u5b9f\u884c\u65b9\u5f0f\u3092\u9078\u629e\u3059\u308b\u3002","title":"\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u306b\u306f"},{"location":"python-004-pycharmdocker/#launchjson","text":"\u5b9f\u884c\u3092\u65b9\u6cd5\u3092\u8a73\u3057\u304f\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u3001launch.json\u3092\u4f5c\u6210\u3059\u308b\u3002 .vscode\u30d5\u30a9\u30eb\u30c0\u5185\u306b\u4f5c\u6210\u3055\u308c\u308b\u3002","title":"launch.json\u3068\u306f"},{"location":"python-004-pycharmdocker/#pytest","text":"","title":"Pytest\u3059\u308b\u306b\u306f"},{"location":"python-005-sqlalchemy_inherit/","text":"\u74b0\u5883 postgress sqlalchemy alembic \u5236\u7d04\u547d\u540d\u30eb\u30fc\u30eb \u5236\u7d04\u540d\u306f\u4ee5\u4e0b\u3092\u53c2\u8003\u3068\u3059\u308b\u3002 sqlalchemy \u4e3b\u30ad\u30fc: {tablename}_pkey \u30e6\u30cb\u30fc\u30af\u30a4\u30f3\u30c7\u30c3\u30af\u30b9: {table_name}_{column_name}_key \u30a4\u30f3\u30c7\u30c3\u30af\u30b9: ix_{table_name}_{column_name} check\u5236\u7d04: ? \u30c7\u30d5\u30a9\u30eb\u30c8\u5236\u7d04: ? \u5916\u90e8\u30ad\u30fc\u5236\u7d04: ? \u500b\u4eba\u30eb\u30fc\u30eb \u4e3b\u30ad\u30fc: pk_ \u30e6\u30cb\u30fc\u30af\u30a4\u30f3\u30c7\u30c3\u30af\u30b9: uq_ \u30a4\u30f3\u30c7\u30c3\u30af\u30b9: ix_ check\u5236\u7d04: ck_ \u30c7\u30d5\u30a9\u30eb\u30c8\u5236\u7d04: df_ \u5916\u90e8\u30ad\u30fc\u5236\u7d04: fk_ \u306f\u3058\u3081\u306b import sqlalchemy as sa from sqlalchemy.ext.declarative import declarative_base Base = declarative_base () \u5171\u901a\u5316\u30fb\u62bd\u8c61\u5316\u306e\u57fa\u672c \u5171\u901a\u30ab\u30e9\u30e0\u30fb\u5171\u901a\u30aa\u30d7\u30b7\u30e7\u30f3\u30fb\u5171\u901a\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30af\u30e9\u30b9\u9593\u3067\u5171\u6709\u3059\u308b\u305f\u3081\u306b\u3001\u30df\u30c3\u30af\u30b9\u30a4\u30f3\u3084\u30ab\u30b9\u30bf\u30e0Base\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3059\u308b\u3002 \u516c\u5f0f\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u3002 \u30df\u30c3\u30af\u30b9\u30a4\u30f3 NG\u30b1\u30fc\u30b9\uff11 Base\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u62bd\u8c61\u30af\u30e9\u30b9\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002 Base\u3092\u7d99\u627f\u3057\u305f\u969b\u306f\u3001__tablename__\u3092\u8a2d\u5b9a\u3057\u3001\u5177\u8c61\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 class CommonTable ( Base ): id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) # => sqlalchemy.exc.InvalidRequestError: Class <class 'CommonTable'> does not have a __table__ or __tablename__ specified and does not inherit from an existing table-mapped class. NG\u30b1\u30fc\u30b9\uff12 \u5236\u7d04\u540d\u306f\u3001\u30b9\u30ad\u30fc\u30de\u3067\u4e00\u610f\u306a\u305f\u3081\u3001\u5171\u901a\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002 class CommonTable: id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) __table_args__ = ( sa . UniqueConstraint ( \"name\" , name = \"uq_name\" ), ) class Table1 ( CommonBase , Base ): __tablename__ = \"table1\" class Table2 ( CommonBase , Base ): __tablename__ = \"table2\" # => sqlalchemy.exc.ProgrammingError: (psycopg2.errors.DuplicateTable) relation \"uq_name\" already exists NG\u30b1\u30fc\u30b9\uff13 \u30b1\u30fc\u30b9\uff12\u3068\u540c\u3058\u304f\u3002 class CommonTable: id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) class Table1 ( CommonBase , Base ): __tablename__ = \"table1\" __table_args__ = ( sa . UniqueConstraint ( \"name\" , name = \"uq_name\" ), ) class Table2 ( CommonBase , Base ): __tablename__ = \"table2\" __table_args__ = ( sa . UniqueConstraint ( \"name\" , name = \"uq_name\" ), ) # => sqlalchemy.exc.ProgrammingError: (psycopg2.errors.DuplicateTable) relation \"uq_name\" already exists OK\u30b1\u30fc\u30b9\uff14 \u5236\u7d04\u540d\u306f\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 class CommonTable: id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) class Table1 ( CommonBase , Base ): __tablename__ = \"table1\" __table_args__ = ( sa . UniqueConstraint ( \"name\" ), ) NG\u30b1\u30fc\u30b9\uff15 \u5171\u901a\u30af\u30e9\u30b9\u306b\u304a\u3051\u308b__targle_args__\u7b49\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u5ba3\u8a00\u306f\u3001@declared_attr\u3092\u7528\u3044\u308b\u3053\u3068 \u305d\u3046\u3067\u306a\u3044\u5834\u5408\u3001ORM\u304c\u610f\u56f3\u3092\u6b63\u3057\u304f\u89e3\u91c8\u3057\u306a\u3044\u3002 class CommonTable : id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) __table_args__ = ( sa . UniqueConstraint ( \"name\" ), ) class Table1 ( CommonBase , Base ): __tablename__ = \"table1\" class Table2 ( CommonBase , Base ): __tablename__ = \"table2\" # alembic\u306b\u3088\u308b\u30aa\u30fc\u30c8\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u540c\u3058\u30c6\u30fc\u30d6\u30eb\u306b\u5236\u7d04\u3092\u3064\u3051\u3088\u3046\u3068\u3057\u3066\u3044\u308b def upgrade (): # ### commands auto generated by Alembic - please adjust! ### op . create_unique_constraint ( None , 'table2' , [ 'name' ]) op . create_unique_constraint ( None , 'table2' , [ 'name' ]) \u30df\u30c3\u30af\u30b9\u30a4\u30f3\u306b\u3088\u308b\u5171\u901a\u5316 \u30d7\u30ec\u30fc\u30f3\u306a\u62bd\u8c61\u5ba3\u8a00\u30af\u30e9\u30b9\u3068Base\u3092\u30df\u30c3\u30af\u30b9\u30a4\u30f3\u3059\u308b\u3002 \u65b9\u6cd5\uff11 class Common: id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) __table_args__ = ( sa . UniqueConstraint ( \"name\" , name = \"uix_name\" ), ) class MyTable ( Common , Base ): __tablename__ = \"mytable\" \u65b9\u6cd5\uff12 class CommonBase: id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) class MyTable ( CommonBase , Base ): __tablename__ = \"mytable\" Base\u30af\u30e9\u30b9\u62e1\u5f35\u306b\u3088\u308b\u5171\u901a\u5316 class Base : @declared_attr def __tablename__ ( cls ) : return cls . __name__ . lower () __table_args__ = {} id = Column ( Integer , primary_key = True ) Base = declarative_base ( cls = Base )","title":"\u8a18\u4e8b06"},{"location":"python-005-sqlalchemy_inherit/#_1","text":"postgress sqlalchemy alembic","title":"\u74b0\u5883"},{"location":"python-005-sqlalchemy_inherit/#_2","text":"\u5236\u7d04\u540d\u306f\u4ee5\u4e0b\u3092\u53c2\u8003\u3068\u3059\u308b\u3002","title":"\u5236\u7d04\u547d\u540d\u30eb\u30fc\u30eb"},{"location":"python-005-sqlalchemy_inherit/#sqlalchemy","text":"\u4e3b\u30ad\u30fc: {tablename}_pkey \u30e6\u30cb\u30fc\u30af\u30a4\u30f3\u30c7\u30c3\u30af\u30b9: {table_name}_{column_name}_key \u30a4\u30f3\u30c7\u30c3\u30af\u30b9: ix_{table_name}_{column_name} check\u5236\u7d04: ? \u30c7\u30d5\u30a9\u30eb\u30c8\u5236\u7d04: ? \u5916\u90e8\u30ad\u30fc\u5236\u7d04: ?","title":"sqlalchemy"},{"location":"python-005-sqlalchemy_inherit/#_3","text":"\u4e3b\u30ad\u30fc: pk_ \u30e6\u30cb\u30fc\u30af\u30a4\u30f3\u30c7\u30c3\u30af\u30b9: uq_ \u30a4\u30f3\u30c7\u30c3\u30af\u30b9: ix_ check\u5236\u7d04: ck_ \u30c7\u30d5\u30a9\u30eb\u30c8\u5236\u7d04: df_ \u5916\u90e8\u30ad\u30fc\u5236\u7d04: fk_","title":"\u500b\u4eba\u30eb\u30fc\u30eb"},{"location":"python-005-sqlalchemy_inherit/#_4","text":"import sqlalchemy as sa from sqlalchemy.ext.declarative import declarative_base Base = declarative_base ()","title":"\u306f\u3058\u3081\u306b"},{"location":"python-005-sqlalchemy_inherit/#_5","text":"\u5171\u901a\u30ab\u30e9\u30e0\u30fb\u5171\u901a\u30aa\u30d7\u30b7\u30e7\u30f3\u30fb\u5171\u901a\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30af\u30e9\u30b9\u9593\u3067\u5171\u6709\u3059\u308b\u305f\u3081\u306b\u3001\u30df\u30c3\u30af\u30b9\u30a4\u30f3\u3084\u30ab\u30b9\u30bf\u30e0Base\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3059\u308b\u3002 \u516c\u5f0f\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u3002 \u30df\u30c3\u30af\u30b9\u30a4\u30f3","title":"\u5171\u901a\u5316\u30fb\u62bd\u8c61\u5316\u306e\u57fa\u672c"},{"location":"python-005-sqlalchemy_inherit/#ng1","text":"Base\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u62bd\u8c61\u30af\u30e9\u30b9\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002 Base\u3092\u7d99\u627f\u3057\u305f\u969b\u306f\u3001__tablename__\u3092\u8a2d\u5b9a\u3057\u3001\u5177\u8c61\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 class CommonTable ( Base ): id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) # => sqlalchemy.exc.InvalidRequestError: Class <class 'CommonTable'> does not have a __table__ or __tablename__ specified and does not inherit from an existing table-mapped class.","title":"NG\u30b1\u30fc\u30b9\uff11"},{"location":"python-005-sqlalchemy_inherit/#ng2","text":"\u5236\u7d04\u540d\u306f\u3001\u30b9\u30ad\u30fc\u30de\u3067\u4e00\u610f\u306a\u305f\u3081\u3001\u5171\u901a\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002 class CommonTable: id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) __table_args__ = ( sa . UniqueConstraint ( \"name\" , name = \"uq_name\" ), ) class Table1 ( CommonBase , Base ): __tablename__ = \"table1\" class Table2 ( CommonBase , Base ): __tablename__ = \"table2\" # => sqlalchemy.exc.ProgrammingError: (psycopg2.errors.DuplicateTable) relation \"uq_name\" already exists","title":"NG\u30b1\u30fc\u30b9\uff12"},{"location":"python-005-sqlalchemy_inherit/#ng3","text":"\u30b1\u30fc\u30b9\uff12\u3068\u540c\u3058\u304f\u3002 class CommonTable: id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) class Table1 ( CommonBase , Base ): __tablename__ = \"table1\" __table_args__ = ( sa . UniqueConstraint ( \"name\" , name = \"uq_name\" ), ) class Table2 ( CommonBase , Base ): __tablename__ = \"table2\" __table_args__ = ( sa . UniqueConstraint ( \"name\" , name = \"uq_name\" ), ) # => sqlalchemy.exc.ProgrammingError: (psycopg2.errors.DuplicateTable) relation \"uq_name\" already exists","title":"NG\u30b1\u30fc\u30b9\uff13"},{"location":"python-005-sqlalchemy_inherit/#ok4","text":"\u5236\u7d04\u540d\u306f\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 class CommonTable: id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) class Table1 ( CommonBase , Base ): __tablename__ = \"table1\" __table_args__ = ( sa . UniqueConstraint ( \"name\" ), )","title":"OK\u30b1\u30fc\u30b9\uff14"},{"location":"python-005-sqlalchemy_inherit/#ng5","text":"\u5171\u901a\u30af\u30e9\u30b9\u306b\u304a\u3051\u308b__targle_args__\u7b49\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u5ba3\u8a00\u306f\u3001@declared_attr\u3092\u7528\u3044\u308b\u3053\u3068 \u305d\u3046\u3067\u306a\u3044\u5834\u5408\u3001ORM\u304c\u610f\u56f3\u3092\u6b63\u3057\u304f\u89e3\u91c8\u3057\u306a\u3044\u3002 class CommonTable : id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) __table_args__ = ( sa . UniqueConstraint ( \"name\" ), ) class Table1 ( CommonBase , Base ): __tablename__ = \"table1\" class Table2 ( CommonBase , Base ): __tablename__ = \"table2\" # alembic\u306b\u3088\u308b\u30aa\u30fc\u30c8\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u540c\u3058\u30c6\u30fc\u30d6\u30eb\u306b\u5236\u7d04\u3092\u3064\u3051\u3088\u3046\u3068\u3057\u3066\u3044\u308b def upgrade (): # ### commands auto generated by Alembic - please adjust! ### op . create_unique_constraint ( None , 'table2' , [ 'name' ]) op . create_unique_constraint ( None , 'table2' , [ 'name' ])","title":"NG\u30b1\u30fc\u30b9\uff15"},{"location":"python-005-sqlalchemy_inherit/#_6","text":"\u30d7\u30ec\u30fc\u30f3\u306a\u62bd\u8c61\u5ba3\u8a00\u30af\u30e9\u30b9\u3068Base\u3092\u30df\u30c3\u30af\u30b9\u30a4\u30f3\u3059\u308b\u3002","title":"\u30df\u30c3\u30af\u30b9\u30a4\u30f3\u306b\u3088\u308b\u5171\u901a\u5316"},{"location":"python-005-sqlalchemy_inherit/#1","text":"class Common: id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) __table_args__ = ( sa . UniqueConstraint ( \"name\" , name = \"uix_name\" ), ) class MyTable ( Common , Base ): __tablename__ = \"mytable\"","title":"\u65b9\u6cd5\uff11"},{"location":"python-005-sqlalchemy_inherit/#2","text":"class CommonBase: id = sa . Column ( sa . Integer , primary_key = True , index = True ) name = sa . Column ( sa . String ( 255 ), nullable = False ) class MyTable ( CommonBase , Base ): __tablename__ = \"mytable\"","title":"\u65b9\u6cd5\uff12"},{"location":"python-005-sqlalchemy_inherit/#base","text":"class Base : @declared_attr def __tablename__ ( cls ) : return cls . __name__ . lower () __table_args__ = {} id = Column ( Integer , primary_key = True ) Base = declarative_base ( cls = Base )","title":"Base\u30af\u30e9\u30b9\u62e1\u5f35\u306b\u3088\u308b\u5171\u901a\u5316"},{"location":"python-007-logging/","text":"\u6982\u8981 Python\u306e logging \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u3084\u904b\u7528\u306b\u304a\u3044\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u3092\u77e5\u308b\u305f\u3081\u306e\u975e\u5e38\u306b\u4fbf\u5229\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002 \u4e00\u65b9\u3067\u3001 logging \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u6319\u52d5\u306b\u7656\u304c\u3042\u308a\u3001\u4f7f\u3044\u3053\u306a\u3059\u306e\u304c\u5c11\u3057\u96e3\u3057\u3044\u5074\u9762\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001 logging \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u57fa\u790e\u6559\u990a\u3068\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u65b9\u6cd5\u3084\u7656\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002 \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u6700\u65b0\u306e\u4ed5\u69d8\u3084\u6b63\u78ba\u306a\u4ed5\u69d8\u306e\u7406\u89e3\u306b\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 https://docs.python.org/ja/3/library/logging.html \u30ed\u30ae\u30f3\u30b0\u306e\u57fa\u790e \u30ed\u30b0\u30ec\u30d9\u30eb \u30ec\u30d9\u30eb\u540d \u6570\u5024 \u5099\u8003 CRITICAL 50 \u81f4\u547d\u7684\u306a\u30a8\u30e9\u30fc\u30ed\u30b0 ERROR 40 \u30a8\u30e9\u30fc\u30ed\u30b0 WARNING 30 \u8b66\u544a\u30ed\u30b0 SUCCESS 25 \u6210\u529f\u30ed\u30b0\u3002 logure \u30e9\u30a4\u30d6\u30e9\u30ea\uff08\u5f8c\u8ff0\uff09\u306e\u62e1\u5f35\u30ec\u30d9\u30eb\u3067\u3001 logging \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306f\u542b\u307e\u308c\u306a\u3044 INFO 20 \u60c5\u5831\u30ed\u30b0 DEBUG 10 \u30c7\u30d0\u30c3\u30b0\u30ed\u30b0 TRACE 5 \u30c7\u30d0\u30c3\u30b0\u3088\u308a\u8a73\u7d30\u306a\u30ed\u30b0\u3002 logure \u30e9\u30a4\u30d6\u30e9\u30ea\uff08\u5f8c\u8ff0\uff09\u306e\u62e1\u5f35\u30ec\u30d9\u30eb\u3067\u3001 logging \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306f\u542b\u307e\u308c\u306a\u3044 NOTSET 0 \u57fa\u672c\u7684\u306b\u4f7f\u7528\u3057\u306a\u3044 \u8868\u793a\u3055\u308c\u308b\u30ec\u30d9\u30eb\u540d\u306f\u6b21\u306e\u3088\u3046\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u53ef\u80fd\u3067\u3059\u3002 for level , name in { logging . CRITICAL : \"FATAL\" , logging . WARNING : \"WARN\" } . items (): logging . addLevelName ( level , name ) \u30ed\u30ac\u30fc \u30d5\u30a9\u30fc\u30de\u30c3\u30bf import logging fmt = logging . Formatter ( \" %(asctime)s %(levelname).5s %(name)s %(filename)s : %(lineno)s %(message)s \" , datefmt = \"%Y-%m- %d %H:%M:%S\" ) logging . basicConfig ( format = \" %(asctime)s %(levelname).5s %(name)s %(filename)s : %(lineno)s %(message)s \" , datefmt = \"%Y-%m- %d %H:%M:%S\" ) \u30cf\u30f3\u30c9\u30e9\u30fc https://docs.python.org/ja/3.11/howto/logging.html#useful-handlers \u30d5\u30a3\u30eb\u30bf\u30fc \u4eba\u985e\u306b\u306f\u65e9\u3044\u306e\u3067\u4f7f\u308f\u306a\u3044\u3002 logging \u306e\u4f7f\u7528 \u4f7f\u7528\u65b9\u6cd5 \u30ed\u30ae\u30f3\u30b0\u306e\u7f60 logging \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u4e0a\u3067\u3001\u7656\u3092\u7406\u89e3\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 logging \u30e2\u30b8\u30e5\u30fc\u30eb\u521d\u5b66\u8005\u306e\u65b9\u306f\u3001\u3053\u306e\u7ae0\u306f\u8aad\u307f\u98db\u3070\u3057\u3066\u3001\u7406\u89e3\u304c\u6df1\u307e\u3063\u305f\u3068\u3053\u308d\u3067\u623b\u3063\u3066\u304d\u3066\u304f\u3060\u3055\u3044\u3002 \u307e\u305a\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 import logging from logging import getLogger , StreamHandler , Formatter # \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 formatter = Formatter ( \" %(asctime)s %(name)s %(levelname)s %(filename)s : %(lineno)s %(message)s \" , datefmt = \"%Y-%m- %d %H:%M:%S\" ) sh = StreamHandler () sh . setLevel ( logging . INFO ) sh . setFormatter ( formatter ) mylogger = getLogger ( \"mylogger\" ) mylogger . setLevel ( logging . INFO ) mylogger . addHandler ( sh ) # \u52d5\u4f5c\u691c\u8a3c print ( logging . getLevelName ( logging . root . level )) print ( logging . root . handlers ) mylogger . info ( \"hello 1\" ) logging . info ( \"hello 2\" ) mylogger . info ( \"hello 3\" ) print ( logging . root . handlers ) \u5b9f\u884c\u7d50\u679c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 WARNING [] 2023-03-22 01:07:51 mylogger INFO aaa.py:20 hello 1 2023-03-22 01:07:51 mylogger INFO aaa.py:22 hello 3 INFO:mylogger:hello 3 [<StreamHandler <stderr> (NOTSET)>] \u7c21\u5358\u306a\u6982\u5ff5 \u30ed\u30ac\u30fc\uff08 getLogger(\"mylogger\") \uff09: \u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u4efb\u610f\u306e\u540d\u524d\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\uff08 logging.root \uff09: \u5168\u3066\u306e\u89aa\u3068\u306a\u308b\u30ed\u30ac\u30fc\u3002 \u30cf\u30f3\u30c9\u30e9\u30fc\u7fa4\uff08 logging.root.handlers \uff09: \u30ed\u30ac\u30fc\u306f\u3001\u8907\u6570\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u6301\u3064 \u30cf\u30f3\u30c9\u30e9\u30fc\uff08 StreamHandler \uff09: \u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\uff08\u6a19\u6e96\u51fa\u529b\u3084\u30d5\u30a1\u30a4\u30eb\uff09\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3059\u308b\u3002StreamHandler\u306f\u3001\u6a19\u6e96\u51fa\u529b\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u30fc \u30d5\u30a9\u30fc\u30de\u30c3\u30bf\uff08 Formatter\uff08...\uff09 \uff09: \u3069\u306e\u3088\u3046\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3059\u308b\u304b\u5f62\u5f0f\u3092\u6c7a\u3081\u308b \u30ed\u30b0\u30ec\u30d9\u30eb\uff08 logging.INFO \uff09: \u30ed\u30b0\u306e\u30ec\u30d9\u30eb\u3002 INFO \u3084 WARNING \u306a\u3069\u306b\u30ed\u30b0\u3092\u5206\u985e\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3002\u30cf\u30f3\u30c9\u30e9\u30fc\u306f\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u81ea\u8eab\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u30ed\u30b0\u30ec\u30d9\u30eb\u4ee5\u4e0a\u306e\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b \u51fa\u529b\uff08 mylogger.info \u306a\u3069\uff09: \u30ed\u30b0\u30ec\u30d9\u30eb\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30cf\u30f3\u30c9\u30e9\u30fc\u306b\u6e21\u3059 \u3061\u306a\u307f\u306b\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306f logging.root \u3001\u3042\u308b\u3044\u306f\u3001 logging.getLogger() \u3067\u53d6\u5f97\u3057\u307e\u3059\u3002 import logging print ( logging . root is logging . getLogger ()) print ( logging . root is logging . getLogger ( \"root\" )) # root \u3068\u3044\u3046\u540d\u524d\u3067\u53d6\u5f97\u3057\u305f\u30ed\u30ac\u30fc\u306f\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3067\u306f\u306a\u3044 # True # False \u5b9f\u884c\u7d50\u679c\u306b\u304a\u3051\u308b\u9055\u548c\u611f \u304a\u305d\u3089\u304f\u3001\u5b9f\u884c\u7d50\u679c\u306b\u6b21\u306e\u9055\u548c\u611f\u3092\u899a\u3048\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f \u306a\u305c\u3001 logging.root.handlers \u306e\u72b6\u614b\u304c\u5909\u308f\u3063\u3066\u3044\u308b\u306e\u3060\u308d\u3046\u304b \u306a\u305c\u3001 \"hello 3\" \u304c\uff12\u56de\u51fa\u529b\u3055\u308c\u308b\u306e\u3060\u308d\u3046\u304b \u9055\u548c\u611f 1. \u306f\u3001 logging.info(\"hello 2\") \u304c\u95a2\u4fc2\u3057\u3066\u3044\u307e\u3059\u3002 cpython \u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u30b3\u30fc\u30c9\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002 def info ( msg , * args , ** kwargs ): if len ( root . handlers ) == 0 : basicConfig () root . info ( msg , * args , ** kwargs ) logging \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3067\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3092\u6301\u3061\u3001 logging.info \u306a\u3069\u3092\u547c\u3073\u51fa\u3057\u305f\u969b\u306b\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u672a\u8a2d\u5b9a\u306a\u5834\u5408\u3001 basicConfig \uff08\u660e\u793a\u7684\u306b\u5f15\u6570\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u304c\u9069\u7528\u3055\u308c\u307e\u3059\uff09\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\uff08 <StreamHandler <stderr> (NOTSET)> \uff09\u304c\u8a2d\u5b9a\u3055\u308c\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306e\u72b6\u614b\u304c\u5909\u308f\u308a\u307e\u3059\u3002 logging.info \u306f\u4f7f\u3046\u306a\uff01\uff01\uff01!!!!!!!!!!!!!!!!!!!!!!!!!!!!! NullHandler\u3068\u304b\u30ed\u30ac\u30fc\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u3066\u304a\u3051\uff01\uff01\uff01 root_logger = logging.getLogger() \u9055\u548c\u611f 2. \u306f\u3001\u30ed\u30ac\u30fc\u306f\u89aa\u5b50\u95a2\u4fc2\u3092\u6301\u3064\u3053\u3068\u3068\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u30ed\u30b0\u30ec\u30d9\u30eb\u304c\u95a2\u4fc2\u3057\u3066\u3044\u307e\u3059\u3002 \u5168\u3066\u306e\u30ed\u30ac\u30fc\u306f\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306e\u5b50\u3068\u306a\u308a\u3001\u5b50\u30ed\u30ac\u30fc\u306b\u4e0e\u3048\u305f\u30ed\u30b0\u306f\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306b\u4f1d\u642c\u3057\u3001\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u3068\u306a\u308a\u307e\u3059\u3002 2023-03-22 01:07:51 mylogger INFO aaa.py:22 hello 3 : mylogger \u306e\u30cf\u30f3\u30c9\u30e9\u304b\u3089\u51fa\u529b\u3055\u308c\u305f\u30ed\u30b0 INFO:mylogger:hello 3 : mylogger \u306e\u30ed\u30b0\u304c\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3078\u4f1d\u642c\u3055\u308c\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306e\u30cf\u30f3\u30c9\u30e9\u304b\u3089\u51fa\u529b\u3055\u308c\u305f\u30ed\u30b0 \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u8ff0\u3079\u3089\u308c\u3066\u3044\u307e\u3059\u3002 https://docs.python.org/ja/3.11/howto/logging.html#logging-levels \u30ed\u30ac\u30fc\u306b\u76f4\u63a5\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u30cf\u30f3\u30c9\u30e9\u306b\u52a0\u3048\u3066\u3001\u30ed\u30ac\u30fc\u306e\u4e0a\u4f4d\u306b\u3042\u308b\u30ed\u30ac\u30fc\u3059\u3079\u3066\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u30cf\u30f3\u30c9\u30e9 \u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3059\u308b\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059 (\u305f\u3060\u3057\u30ed\u30ac\u30fc\u306e propagate \u30d5\u30e9\u30b0\u304c false \u5024\u306b\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3092\u9664\u304d\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u3001\u7956\u5148\u30cf\u30f3\u30c9\u30e9\u3078\u306e\u4f1d\u642c\u306f\u305d\u3053\u3067\u6b62\u307e\u308a\u307e\u3059)\u3002 \u3053\u306e\u90e8\u5206\u3092\u6b21\u306e\u30b3\u30fc\u30c9\u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 import logging logging . basicConfig ( level = logging . WARNING ) root = logging . getLogger () sh = logging . StreamHandler () sh . setLevel ( logging . INFO ) child = logging . getLogger ( \"child\" ) child . setLevel ( logging . INFO ) child . addHandler ( sh ) root . warning ( \"a\" ) # INFO:child:a root . info ( \"b\" ) # \u4f55\u3082\u51fa\u529b\u3055\u308c\u306a\u3044 child . warning ( \"c\" ) # c # INFO:child:c child . info ( \"d\" ) # d # INFO:child:d child . debug ( \"e\" ) # \u4f55\u3082\u51fa\u529b\u3055\u308c\u306a\u3044 WARNING \u30ec\u30d9\u30eb\u306e\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3068\u3001 INFO \u30ec\u30d9\u30eb\u306e child \u30ed\u30ac\u30fc\u3092\u4f5c\u6210\u3057\u3001\u30ed\u30b0\u306e\u51fa\u529b\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002 child.info(\"d\") \u306e\u90e8\u5206\u306b\u9055\u548c\u611f\u3092\u611f\u3058\u307e\u305b\u3093\u304b\uff1f child \u30ed\u30ac\u30fc\u306f INFO \u30ec\u30d9\u30eb\u3067\u3059\u304c\u3001 root \u30ed\u30ac\u30fc\u306f WARNING \u30ec\u30d9\u30eb\u3067\u3059\u3002 \u3067\u3059\u306e\u3067\u3001 root \u30ed\u30ac\u30fc\u306b INFO \u30ec\u30d9\u30eb\u306e\u30ed\u30b0\u304c\u4f1d\u642c\u3055\u308c\u3066\u3082\u3001\u305d\u306e\u30ed\u30b0\u306f\u7121\u8996\u3055\u308c\u308b\u3088\u3046\u306b\u601d\u3048\u307e\u305b\u3093\u304b\uff1f \u7b54\u3048\u306f\u3001 root \u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u30ed\u30b0\u30ec\u30d9\u30eb\u306b\u3042\u308a\u307e\u3059\u3002 import logging logging . basicConfig ( level = logging . WARNING ) root = logging . getLogger () print ( root . handlers ) # [<StreamHandler <stderr> (NOTSET)>] \u660e\u793a\u7684\u306b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u30ed\u30b0\u30ec\u30d9\u30eb\u3092\u8a2d\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001 NOTSET \uff08\u5168\u3066\u306e\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\uff09\u3068\u306a\u308a\u307e\u3059\u3002 \u307e\u305f\u3001 \u30ed\u30ac\u30fc\u306e\u4e0a\u4f4d\u306b\u3042\u308b\u30ed\u30ac\u30fc\u3059\u3079\u3066\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u30cf\u30f3\u30c9\u30e9 \u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3059\u308b\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059 \u3053\u3068\u304b\u3089\u3001\u30ed\u30ac\u30fc\u81ea\u8eab\u306e\u30ec\u30d9\u30eb\u3067\u306a\u304f\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u30ec\u30d9\u30eb\u304c\u53c2\u7167\u3055\u308c\u308b\u305f\u3081\u3001\u3053\u306e\u3088\u3046\u306a\u6319\u52d5\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u3002 \u79c1\u306f\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u304c\u5acc\u3044\u306a\u306e\u3067\u3001 NullHandler \uff08\u5168\u3066\u306e\u30ed\u30b0\u3092\u7121\u8996\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u30fc\uff09\u3092\u4f7f\u7528\u3057\u3066\u3001\u6b21\u306e\u3088\u3046\u306b\u3057\u3066\u7121\u52b9\u5316\u3057\u3066\u3044\u307e\u3059\u3002 logging.basicConfig(handlers=[logging.NullHandler()]) \u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001 basicConfig \u306a\u3069\u306e\u6319\u52d5\u306b\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\u3002 \u3061\u306a\u307f\u306b\u3001\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u89aa\u30ed\u30ac\u30fc\u3078\u306e\u4f1d\u642c\u3092\u7121\u52b9\u5316\u3067\u304d\u307e\u3059\uff08\u79c1\u306f\u4f7f\u7528\u3057\u307e\u305b\u3093\u304c\uff09\u3002 from logging import getLogger child = getLogger ( \"child\" ) child . propagate = False warnings \u306e\u4f7f\u7528 warnings \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u8b66\u544a\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u306ePython\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002 \u6700\u65b0\u306e\u4ed5\u69d8\u3084\u6b63\u78ba\u306a\u4ed5\u69d8\u306e\u7406\u89e3\u306b\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 https://docs.python.org/ja/3/library/warnings.html \u8b66\u544a\u30ec\u30d9\u30eb\u306e\u30ed\u30b0\u306f\u3001 logger.warning \u3067\u51fa\u529b\u3067\u304d\u307e\u3059\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8b66\u544a\u30ec\u30d9\u30eb\u3068\u306f\u533a\u5225\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u90e8\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b\u5c06\u6765\u7684\u306b\u5ec3\u6b62\u3055\u308c\u308b\u975e\u63a8\u5968\u306a\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u305f\u5834\u5408\u306b\u3001\u8b66\u544a\u30ec\u30d9\u30eb\u3092\u958b\u767a\u8005\u306e\u307f\u306b\u901a\u77e5\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u3067\u3059\u3002 \u4f7f\u7528\u65b9\u6cd5 warnings \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002 import warnings warngins . warn ( \"deprecated\" ) warnings \u3067\u767a\u305b\u3089\u308c\u305f\u8b66\u544a\u306f\u3001\u6a19\u6e96\u51fa\u529b\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u3001 captureWarnings \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30ed\u30ae\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001\u8b66\u544a\u304c warnings.formatwarning() \u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5316\u3055\u308c\u3001\u7d50\u679c\u306e\u6587\u5b57\u5217\u304c 'py.warnings' \u3068\u3044\u3046\u540d\u306e\u30ed\u30ac\u30fc\u306b\u3001 WARNING \u306e\u91cd\u5927\u5ea6\u3067\u30ed\u30ae\u30f3\u30b0\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 import logging logging . captureWarnings ( True ) \u8b66\u544a\u30ab\u30c6\u30b4\u30ea \u8b66\u544a\u306f\u3001\u30ab\u30c6\u30b4\u30ea\u306b\u5206\u985e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u6b21\u306b\u3044\u304f\u3064\u304b\u306e\u30ab\u30c6\u30b4\u30ea\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002 \u30ec\u30d9\u30eb\u540d \u5099\u8003 UserWarning \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ab\u30c6\u30b4\u30ea\u3067\u3059 DeprecationWarning \u975e\u63a8\u5968\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 FutureWarning \u307e\u3060\u3001\u5b9f\u9a13\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 \u8b66\u544a\u306b\u30ab\u30c6\u30b4\u30ea\u3092\u9069\u7528\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 import warnings warngins . warn ( \"deprecated\" , DeprecationWarning ) \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u63d0\u4f9b\u3059\u308b\u958b\u767a\u8005\u306f\u3001\u30ab\u30c6\u30b4\u30ea\u3092\u9069\u5207\u306b\u4f7f\u7528\u3057\u305f\u65b9\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u591a\u304f\u306e\u5834\u5408\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ab\u30c6\u30b4\u30ea\u3067\u5341\u5206\u3067\u3059\u3002 \u8b66\u544a\u30d5\u30a3\u30eb\u30bf \u8b66\u544a\u304c\u6c17\u306b\u306a\u308b\u5834\u5408\u3001\u8b66\u544a\u30d5\u30a3\u30eb\u30bf\u3092\u4f7f\u7528\u3057\u3001\u8b66\u544a\u306e\u51fa\u529b\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u8b66\u544a\u30d5\u30a3\u30eb\u30bf \u5099\u8003 default \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ab\u30c6\u30b4\u30ea\u3067\u3059 error \u975e\u63a8\u5968\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 ignore \u307e\u3060\u3001\u5b9f\u9a13\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 always \u307e\u3060\u3001\u5b9f\u9a13\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 module \u307e\u3060\u3001\u5b9f\u9a13\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 once \u307e\u3060\u3001\u5b9f\u9a13\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 \u8b66\u544a\u30d5\u30a3\u30eb\u30bf\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u9069\u7528\u3057\u307e\u3059\u3002 warnings . filterwarnings ( 'ignore' ) tqdm \u306e\u4f7f\u7528 tqdm \u306f\u3001\u9032\u6357\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u306b\u53ef\u8996\u5316\u3057\u305f\u3044\u6642\u306b\u4f7f\u3044\u307e\u3059\u3002 \u6b63\u78ba\u306a\u4ed5\u69d8\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 https://tqdm.github.io/ \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb tqdm \u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 pip install tqdm \u4f7f\u7528\u65b9\u6cd5 progressbar2 \u306e\u4f7f\u7528 progressbar2 \u306f\u3001\u9032\u6357\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u306b\u53ef\u8996\u5316\u3057\u305f\u3044\u6642\u306b\u4f7f\u3044\u307e\u3059\u3002 tqdm \u306e\u65b9\u304c\u4e00\u822c\u7684\u3067\u3059\u304c\u3001 progressbar2 \u3092\u597d\u3080\u4eba\u3082\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\u3002 \u6b63\u78ba\u306a\u4ed5\u69d8\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 https://progressbar-2.readthedocs.io/en/latest/ \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb progressbar2 \u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 pip install progressbar2 \u4f7f\u7528\u65b9\u6cd5 sentry \u306e\u4f7f\u7528 sentry \u306f\u3001OSS\u306e\u30ed\u30b0\u53ce\u96c6\u30fb\u76e3\u8996\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u6b63\u78ba\u306a\u4ed5\u69d8\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 https://docs.sentry.io/platforms/python/ \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u9ad8\u5ea6\u306a\u30ed\u30ae\u30f3\u30b0 \u540c\u671f\u30fb\u975e\u540c\u671f\u5316\u3067\u306e\u30ed\u30ae\u30f3\u30b0 \u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u5316\u3067\u306e\u30ed\u30ae\u30f3\u30b0 \u307e\u3068\u3081 \u30ed\u30ac\u30fc\u306f\u3001\u6b21\u306e\u6319\u52d5\u306b\u6c17\u3092\u3064\u3051\u3066\u4f7f\u7528\u3059\u308b\u3002 \u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u521d\u671f\u5316\uff08 basicConfig \u304c\u5b9f\u884c\uff09\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b \u30ed\u30ac\u30fc\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30ed\u30b0\u30ec\u30d9\u30eb\u306f WARNING \u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30ed\u30b0\u30ec\u30d9\u30eb\u306f NOTSET \u30ed\u30ac\u30fc\u306f\u3001\u81ea\u8eab\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u5168\u3066\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u547c\u3073\u51fa\u3059 \u30cf\u30f3\u30c9\u30e9\u30fc\u306f\u3001\u4e0a\u4f4d\u306e\u30ed\u30ac\u30fc\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u5168\u3066\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u547c\u3073\u51fa\u3059 basicConfig \u306f \u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306b\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u4f55\u3082\u3057\u306a\u3044\uff08 force \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5f37\u5236\u7684\u306b\u9069\u7528\u53ef\u80fd\uff09 \u30e9\u30a4\u30d6\u30e9\u30ea\u958b\u767a\u8005\u306f\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3092\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002 \u30e9\u30a4\u30d6\u30e9\u30ea\u958b\u767a\u8005\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u8b66\u544a\u3092\u3057\u305f\u3044\u5834\u5408\u306f\u3001 warnings \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3002 \u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3092\u7121\u52b9\u5316\u3057\u305f\u3044\u5834\u5408\u306b\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3002 logging . basicConfig ( handlers = [ logging . NullHandler ()])","title":"\u8a18\u4e8b07"},{"location":"python-007-logging/#_1","text":"Python\u306e logging \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u3084\u904b\u7528\u306b\u304a\u3044\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u3092\u77e5\u308b\u305f\u3081\u306e\u975e\u5e38\u306b\u4fbf\u5229\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002 \u4e00\u65b9\u3067\u3001 logging \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u6319\u52d5\u306b\u7656\u304c\u3042\u308a\u3001\u4f7f\u3044\u3053\u306a\u3059\u306e\u304c\u5c11\u3057\u96e3\u3057\u3044\u5074\u9762\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001 logging \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u57fa\u790e\u6559\u990a\u3068\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u65b9\u6cd5\u3084\u7656\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002","title":"\u6982\u8981"},{"location":"python-007-logging/#_2","text":"\u6700\u65b0\u306e\u4ed5\u69d8\u3084\u6b63\u78ba\u306a\u4ed5\u69d8\u306e\u7406\u89e3\u306b\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 https://docs.python.org/ja/3/library/logging.html","title":"\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"},{"location":"python-007-logging/#_3","text":"","title":"\u30ed\u30ae\u30f3\u30b0\u306e\u57fa\u790e"},{"location":"python-007-logging/#_4","text":"\u30ec\u30d9\u30eb\u540d \u6570\u5024 \u5099\u8003 CRITICAL 50 \u81f4\u547d\u7684\u306a\u30a8\u30e9\u30fc\u30ed\u30b0 ERROR 40 \u30a8\u30e9\u30fc\u30ed\u30b0 WARNING 30 \u8b66\u544a\u30ed\u30b0 SUCCESS 25 \u6210\u529f\u30ed\u30b0\u3002 logure \u30e9\u30a4\u30d6\u30e9\u30ea\uff08\u5f8c\u8ff0\uff09\u306e\u62e1\u5f35\u30ec\u30d9\u30eb\u3067\u3001 logging \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306f\u542b\u307e\u308c\u306a\u3044 INFO 20 \u60c5\u5831\u30ed\u30b0 DEBUG 10 \u30c7\u30d0\u30c3\u30b0\u30ed\u30b0 TRACE 5 \u30c7\u30d0\u30c3\u30b0\u3088\u308a\u8a73\u7d30\u306a\u30ed\u30b0\u3002 logure \u30e9\u30a4\u30d6\u30e9\u30ea\uff08\u5f8c\u8ff0\uff09\u306e\u62e1\u5f35\u30ec\u30d9\u30eb\u3067\u3001 logging \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306f\u542b\u307e\u308c\u306a\u3044 NOTSET 0 \u57fa\u672c\u7684\u306b\u4f7f\u7528\u3057\u306a\u3044 \u8868\u793a\u3055\u308c\u308b\u30ec\u30d9\u30eb\u540d\u306f\u6b21\u306e\u3088\u3046\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u53ef\u80fd\u3067\u3059\u3002 for level , name in { logging . CRITICAL : \"FATAL\" , logging . WARNING : \"WARN\" } . items (): logging . addLevelName ( level , name )","title":"\u30ed\u30b0\u30ec\u30d9\u30eb"},{"location":"python-007-logging/#_5","text":"","title":"\u30ed\u30ac\u30fc"},{"location":"python-007-logging/#_6","text":"import logging fmt = logging . Formatter ( \" %(asctime)s %(levelname).5s %(name)s %(filename)s : %(lineno)s %(message)s \" , datefmt = \"%Y-%m- %d %H:%M:%S\" ) logging . basicConfig ( format = \" %(asctime)s %(levelname).5s %(name)s %(filename)s : %(lineno)s %(message)s \" , datefmt = \"%Y-%m- %d %H:%M:%S\" )","title":"\u30d5\u30a9\u30fc\u30de\u30c3\u30bf"},{"location":"python-007-logging/#_7","text":"https://docs.python.org/ja/3.11/howto/logging.html#useful-handlers","title":"\u30cf\u30f3\u30c9\u30e9\u30fc"},{"location":"python-007-logging/#_8","text":"\u4eba\u985e\u306b\u306f\u65e9\u3044\u306e\u3067\u4f7f\u308f\u306a\u3044\u3002","title":"\u30d5\u30a3\u30eb\u30bf\u30fc"},{"location":"python-007-logging/#logging","text":"","title":"logging\u306e\u4f7f\u7528"},{"location":"python-007-logging/#_9","text":"","title":"\u4f7f\u7528\u65b9\u6cd5"},{"location":"python-007-logging/#_10","text":"logging \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u4e0a\u3067\u3001\u7656\u3092\u7406\u89e3\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 logging \u30e2\u30b8\u30e5\u30fc\u30eb\u521d\u5b66\u8005\u306e\u65b9\u306f\u3001\u3053\u306e\u7ae0\u306f\u8aad\u307f\u98db\u3070\u3057\u3066\u3001\u7406\u89e3\u304c\u6df1\u307e\u3063\u305f\u3068\u3053\u308d\u3067\u623b\u3063\u3066\u304d\u3066\u304f\u3060\u3055\u3044\u3002 \u307e\u305a\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 import logging from logging import getLogger , StreamHandler , Formatter # \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 formatter = Formatter ( \" %(asctime)s %(name)s %(levelname)s %(filename)s : %(lineno)s %(message)s \" , datefmt = \"%Y-%m- %d %H:%M:%S\" ) sh = StreamHandler () sh . setLevel ( logging . INFO ) sh . setFormatter ( formatter ) mylogger = getLogger ( \"mylogger\" ) mylogger . setLevel ( logging . INFO ) mylogger . addHandler ( sh ) # \u52d5\u4f5c\u691c\u8a3c print ( logging . getLevelName ( logging . root . level )) print ( logging . root . handlers ) mylogger . info ( \"hello 1\" ) logging . info ( \"hello 2\" ) mylogger . info ( \"hello 3\" ) print ( logging . root . handlers ) \u5b9f\u884c\u7d50\u679c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 WARNING [] 2023-03-22 01:07:51 mylogger INFO aaa.py:20 hello 1 2023-03-22 01:07:51 mylogger INFO aaa.py:22 hello 3 INFO:mylogger:hello 3 [<StreamHandler <stderr> (NOTSET)>]","title":"\u30ed\u30ae\u30f3\u30b0\u306e\u7f60"},{"location":"python-007-logging/#_11","text":"\u30ed\u30ac\u30fc\uff08 getLogger(\"mylogger\") \uff09: \u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u4efb\u610f\u306e\u540d\u524d\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\uff08 logging.root \uff09: \u5168\u3066\u306e\u89aa\u3068\u306a\u308b\u30ed\u30ac\u30fc\u3002 \u30cf\u30f3\u30c9\u30e9\u30fc\u7fa4\uff08 logging.root.handlers \uff09: \u30ed\u30ac\u30fc\u306f\u3001\u8907\u6570\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u6301\u3064 \u30cf\u30f3\u30c9\u30e9\u30fc\uff08 StreamHandler \uff09: \u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\uff08\u6a19\u6e96\u51fa\u529b\u3084\u30d5\u30a1\u30a4\u30eb\uff09\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3059\u308b\u3002StreamHandler\u306f\u3001\u6a19\u6e96\u51fa\u529b\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u30fc \u30d5\u30a9\u30fc\u30de\u30c3\u30bf\uff08 Formatter\uff08...\uff09 \uff09: \u3069\u306e\u3088\u3046\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3059\u308b\u304b\u5f62\u5f0f\u3092\u6c7a\u3081\u308b \u30ed\u30b0\u30ec\u30d9\u30eb\uff08 logging.INFO \uff09: \u30ed\u30b0\u306e\u30ec\u30d9\u30eb\u3002 INFO \u3084 WARNING \u306a\u3069\u306b\u30ed\u30b0\u3092\u5206\u985e\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3002\u30cf\u30f3\u30c9\u30e9\u30fc\u306f\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u81ea\u8eab\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u30ed\u30b0\u30ec\u30d9\u30eb\u4ee5\u4e0a\u306e\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b \u51fa\u529b\uff08 mylogger.info \u306a\u3069\uff09: \u30ed\u30b0\u30ec\u30d9\u30eb\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30cf\u30f3\u30c9\u30e9\u30fc\u306b\u6e21\u3059 \u3061\u306a\u307f\u306b\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306f logging.root \u3001\u3042\u308b\u3044\u306f\u3001 logging.getLogger() \u3067\u53d6\u5f97\u3057\u307e\u3059\u3002 import logging print ( logging . root is logging . getLogger ()) print ( logging . root is logging . getLogger ( \"root\" )) # root \u3068\u3044\u3046\u540d\u524d\u3067\u53d6\u5f97\u3057\u305f\u30ed\u30ac\u30fc\u306f\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3067\u306f\u306a\u3044 # True # False","title":"\u7c21\u5358\u306a\u6982\u5ff5"},{"location":"python-007-logging/#_12","text":"\u304a\u305d\u3089\u304f\u3001\u5b9f\u884c\u7d50\u679c\u306b\u6b21\u306e\u9055\u548c\u611f\u3092\u899a\u3048\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f \u306a\u305c\u3001 logging.root.handlers \u306e\u72b6\u614b\u304c\u5909\u308f\u3063\u3066\u3044\u308b\u306e\u3060\u308d\u3046\u304b \u306a\u305c\u3001 \"hello 3\" \u304c\uff12\u56de\u51fa\u529b\u3055\u308c\u308b\u306e\u3060\u308d\u3046\u304b \u9055\u548c\u611f 1. \u306f\u3001 logging.info(\"hello 2\") \u304c\u95a2\u4fc2\u3057\u3066\u3044\u307e\u3059\u3002 cpython \u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u30b3\u30fc\u30c9\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002 def info ( msg , * args , ** kwargs ): if len ( root . handlers ) == 0 : basicConfig () root . info ( msg , * args , ** kwargs ) logging \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3067\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3092\u6301\u3061\u3001 logging.info \u306a\u3069\u3092\u547c\u3073\u51fa\u3057\u305f\u969b\u306b\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u672a\u8a2d\u5b9a\u306a\u5834\u5408\u3001 basicConfig \uff08\u660e\u793a\u7684\u306b\u5f15\u6570\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u304c\u9069\u7528\u3055\u308c\u307e\u3059\uff09\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\uff08 <StreamHandler <stderr> (NOTSET)> \uff09\u304c\u8a2d\u5b9a\u3055\u308c\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306e\u72b6\u614b\u304c\u5909\u308f\u308a\u307e\u3059\u3002 logging.info \u306f\u4f7f\u3046\u306a\uff01\uff01\uff01!!!!!!!!!!!!!!!!!!!!!!!!!!!!! NullHandler\u3068\u304b\u30ed\u30ac\u30fc\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u3066\u304a\u3051\uff01\uff01\uff01 root_logger = logging.getLogger() \u9055\u548c\u611f 2. \u306f\u3001\u30ed\u30ac\u30fc\u306f\u89aa\u5b50\u95a2\u4fc2\u3092\u6301\u3064\u3053\u3068\u3068\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u30ed\u30b0\u30ec\u30d9\u30eb\u304c\u95a2\u4fc2\u3057\u3066\u3044\u307e\u3059\u3002 \u5168\u3066\u306e\u30ed\u30ac\u30fc\u306f\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306e\u5b50\u3068\u306a\u308a\u3001\u5b50\u30ed\u30ac\u30fc\u306b\u4e0e\u3048\u305f\u30ed\u30b0\u306f\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306b\u4f1d\u642c\u3057\u3001\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u3068\u306a\u308a\u307e\u3059\u3002 2023-03-22 01:07:51 mylogger INFO aaa.py:22 hello 3 : mylogger \u306e\u30cf\u30f3\u30c9\u30e9\u304b\u3089\u51fa\u529b\u3055\u308c\u305f\u30ed\u30b0 INFO:mylogger:hello 3 : mylogger \u306e\u30ed\u30b0\u304c\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3078\u4f1d\u642c\u3055\u308c\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306e\u30cf\u30f3\u30c9\u30e9\u304b\u3089\u51fa\u529b\u3055\u308c\u305f\u30ed\u30b0 \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u8ff0\u3079\u3089\u308c\u3066\u3044\u307e\u3059\u3002 https://docs.python.org/ja/3.11/howto/logging.html#logging-levels \u30ed\u30ac\u30fc\u306b\u76f4\u63a5\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u30cf\u30f3\u30c9\u30e9\u306b\u52a0\u3048\u3066\u3001\u30ed\u30ac\u30fc\u306e\u4e0a\u4f4d\u306b\u3042\u308b\u30ed\u30ac\u30fc\u3059\u3079\u3066\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u30cf\u30f3\u30c9\u30e9 \u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3059\u308b\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059 (\u305f\u3060\u3057\u30ed\u30ac\u30fc\u306e propagate \u30d5\u30e9\u30b0\u304c false \u5024\u306b\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3092\u9664\u304d\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u3001\u7956\u5148\u30cf\u30f3\u30c9\u30e9\u3078\u306e\u4f1d\u642c\u306f\u305d\u3053\u3067\u6b62\u307e\u308a\u307e\u3059)\u3002 \u3053\u306e\u90e8\u5206\u3092\u6b21\u306e\u30b3\u30fc\u30c9\u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 import logging logging . basicConfig ( level = logging . WARNING ) root = logging . getLogger () sh = logging . StreamHandler () sh . setLevel ( logging . INFO ) child = logging . getLogger ( \"child\" ) child . setLevel ( logging . INFO ) child . addHandler ( sh ) root . warning ( \"a\" ) # INFO:child:a root . info ( \"b\" ) # \u4f55\u3082\u51fa\u529b\u3055\u308c\u306a\u3044 child . warning ( \"c\" ) # c # INFO:child:c child . info ( \"d\" ) # d # INFO:child:d child . debug ( \"e\" ) # \u4f55\u3082\u51fa\u529b\u3055\u308c\u306a\u3044 WARNING \u30ec\u30d9\u30eb\u306e\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3068\u3001 INFO \u30ec\u30d9\u30eb\u306e child \u30ed\u30ac\u30fc\u3092\u4f5c\u6210\u3057\u3001\u30ed\u30b0\u306e\u51fa\u529b\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002 child.info(\"d\") \u306e\u90e8\u5206\u306b\u9055\u548c\u611f\u3092\u611f\u3058\u307e\u305b\u3093\u304b\uff1f child \u30ed\u30ac\u30fc\u306f INFO \u30ec\u30d9\u30eb\u3067\u3059\u304c\u3001 root \u30ed\u30ac\u30fc\u306f WARNING \u30ec\u30d9\u30eb\u3067\u3059\u3002 \u3067\u3059\u306e\u3067\u3001 root \u30ed\u30ac\u30fc\u306b INFO \u30ec\u30d9\u30eb\u306e\u30ed\u30b0\u304c\u4f1d\u642c\u3055\u308c\u3066\u3082\u3001\u305d\u306e\u30ed\u30b0\u306f\u7121\u8996\u3055\u308c\u308b\u3088\u3046\u306b\u601d\u3048\u307e\u305b\u3093\u304b\uff1f \u7b54\u3048\u306f\u3001 root \u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u30ed\u30b0\u30ec\u30d9\u30eb\u306b\u3042\u308a\u307e\u3059\u3002 import logging logging . basicConfig ( level = logging . WARNING ) root = logging . getLogger () print ( root . handlers ) # [<StreamHandler <stderr> (NOTSET)>] \u660e\u793a\u7684\u306b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u30ed\u30b0\u30ec\u30d9\u30eb\u3092\u8a2d\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001 NOTSET \uff08\u5168\u3066\u306e\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\uff09\u3068\u306a\u308a\u307e\u3059\u3002 \u307e\u305f\u3001 \u30ed\u30ac\u30fc\u306e\u4e0a\u4f4d\u306b\u3042\u308b\u30ed\u30ac\u30fc\u3059\u3079\u3066\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u30cf\u30f3\u30c9\u30e9 \u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3059\u308b\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059 \u3053\u3068\u304b\u3089\u3001\u30ed\u30ac\u30fc\u81ea\u8eab\u306e\u30ec\u30d9\u30eb\u3067\u306a\u304f\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u30ec\u30d9\u30eb\u304c\u53c2\u7167\u3055\u308c\u308b\u305f\u3081\u3001\u3053\u306e\u3088\u3046\u306a\u6319\u52d5\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u3002 \u79c1\u306f\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u304c\u5acc\u3044\u306a\u306e\u3067\u3001 NullHandler \uff08\u5168\u3066\u306e\u30ed\u30b0\u3092\u7121\u8996\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u30fc\uff09\u3092\u4f7f\u7528\u3057\u3066\u3001\u6b21\u306e\u3088\u3046\u306b\u3057\u3066\u7121\u52b9\u5316\u3057\u3066\u3044\u307e\u3059\u3002 logging.basicConfig(handlers=[logging.NullHandler()]) \u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001 basicConfig \u306a\u3069\u306e\u6319\u52d5\u306b\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\u3002 \u3061\u306a\u307f\u306b\u3001\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u89aa\u30ed\u30ac\u30fc\u3078\u306e\u4f1d\u642c\u3092\u7121\u52b9\u5316\u3067\u304d\u307e\u3059\uff08\u79c1\u306f\u4f7f\u7528\u3057\u307e\u305b\u3093\u304c\uff09\u3002 from logging import getLogger child = getLogger ( \"child\" ) child . propagate = False","title":"\u5b9f\u884c\u7d50\u679c\u306b\u304a\u3051\u308b\u9055\u548c\u611f"},{"location":"python-007-logging/#warnings","text":"warnings \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u8b66\u544a\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u306ePython\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002 \u6700\u65b0\u306e\u4ed5\u69d8\u3084\u6b63\u78ba\u306a\u4ed5\u69d8\u306e\u7406\u89e3\u306b\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 https://docs.python.org/ja/3/library/warnings.html \u8b66\u544a\u30ec\u30d9\u30eb\u306e\u30ed\u30b0\u306f\u3001 logger.warning \u3067\u51fa\u529b\u3067\u304d\u307e\u3059\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8b66\u544a\u30ec\u30d9\u30eb\u3068\u306f\u533a\u5225\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u90e8\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b\u5c06\u6765\u7684\u306b\u5ec3\u6b62\u3055\u308c\u308b\u975e\u63a8\u5968\u306a\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u305f\u5834\u5408\u306b\u3001\u8b66\u544a\u30ec\u30d9\u30eb\u3092\u958b\u767a\u8005\u306e\u307f\u306b\u901a\u77e5\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u3067\u3059\u3002","title":"warnings\u306e\u4f7f\u7528"},{"location":"python-007-logging/#_13","text":"warnings \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002 import warnings warngins . warn ( \"deprecated\" ) warnings \u3067\u767a\u305b\u3089\u308c\u305f\u8b66\u544a\u306f\u3001\u6a19\u6e96\u51fa\u529b\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u3001 captureWarnings \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30ed\u30ae\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001\u8b66\u544a\u304c warnings.formatwarning() \u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5316\u3055\u308c\u3001\u7d50\u679c\u306e\u6587\u5b57\u5217\u304c 'py.warnings' \u3068\u3044\u3046\u540d\u306e\u30ed\u30ac\u30fc\u306b\u3001 WARNING \u306e\u91cd\u5927\u5ea6\u3067\u30ed\u30ae\u30f3\u30b0\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 import logging logging . captureWarnings ( True )","title":"\u4f7f\u7528\u65b9\u6cd5"},{"location":"python-007-logging/#_14","text":"\u8b66\u544a\u306f\u3001\u30ab\u30c6\u30b4\u30ea\u306b\u5206\u985e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u6b21\u306b\u3044\u304f\u3064\u304b\u306e\u30ab\u30c6\u30b4\u30ea\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002 \u30ec\u30d9\u30eb\u540d \u5099\u8003 UserWarning \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ab\u30c6\u30b4\u30ea\u3067\u3059 DeprecationWarning \u975e\u63a8\u5968\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 FutureWarning \u307e\u3060\u3001\u5b9f\u9a13\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 \u8b66\u544a\u306b\u30ab\u30c6\u30b4\u30ea\u3092\u9069\u7528\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 import warnings warngins . warn ( \"deprecated\" , DeprecationWarning ) \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u63d0\u4f9b\u3059\u308b\u958b\u767a\u8005\u306f\u3001\u30ab\u30c6\u30b4\u30ea\u3092\u9069\u5207\u306b\u4f7f\u7528\u3057\u305f\u65b9\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u591a\u304f\u306e\u5834\u5408\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ab\u30c6\u30b4\u30ea\u3067\u5341\u5206\u3067\u3059\u3002","title":"\u8b66\u544a\u30ab\u30c6\u30b4\u30ea"},{"location":"python-007-logging/#_15","text":"\u8b66\u544a\u304c\u6c17\u306b\u306a\u308b\u5834\u5408\u3001\u8b66\u544a\u30d5\u30a3\u30eb\u30bf\u3092\u4f7f\u7528\u3057\u3001\u8b66\u544a\u306e\u51fa\u529b\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u8b66\u544a\u30d5\u30a3\u30eb\u30bf \u5099\u8003 default \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ab\u30c6\u30b4\u30ea\u3067\u3059 error \u975e\u63a8\u5968\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 ignore \u307e\u3060\u3001\u5b9f\u9a13\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 always \u307e\u3060\u3001\u5b9f\u9a13\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 module \u307e\u3060\u3001\u5b9f\u9a13\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 once \u307e\u3060\u3001\u5b9f\u9a13\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30ab\u30c6\u30b4\u30ea\u3067\u3059 \u8b66\u544a\u30d5\u30a3\u30eb\u30bf\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u9069\u7528\u3057\u307e\u3059\u3002 warnings . filterwarnings ( 'ignore' )","title":"\u8b66\u544a\u30d5\u30a3\u30eb\u30bf"},{"location":"python-007-logging/#tqdm","text":"tqdm \u306f\u3001\u9032\u6357\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u306b\u53ef\u8996\u5316\u3057\u305f\u3044\u6642\u306b\u4f7f\u3044\u307e\u3059\u3002 \u6b63\u78ba\u306a\u4ed5\u69d8\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 https://tqdm.github.io/","title":"tqdm\u306e\u4f7f\u7528"},{"location":"python-007-logging/#_16","text":"tqdm \u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 pip install tqdm","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"python-007-logging/#_17","text":"","title":"\u4f7f\u7528\u65b9\u6cd5"},{"location":"python-007-logging/#progressbar2","text":"progressbar2 \u306f\u3001\u9032\u6357\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u306b\u53ef\u8996\u5316\u3057\u305f\u3044\u6642\u306b\u4f7f\u3044\u307e\u3059\u3002 tqdm \u306e\u65b9\u304c\u4e00\u822c\u7684\u3067\u3059\u304c\u3001 progressbar2 \u3092\u597d\u3080\u4eba\u3082\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\u3002 \u6b63\u78ba\u306a\u4ed5\u69d8\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 https://progressbar-2.readthedocs.io/en/latest/","title":"progressbar2\u306e\u4f7f\u7528"},{"location":"python-007-logging/#_18","text":"progressbar2 \u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 pip install progressbar2","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"python-007-logging/#_19","text":"","title":"\u4f7f\u7528\u65b9\u6cd5"},{"location":"python-007-logging/#sentry","text":"sentry \u306f\u3001OSS\u306e\u30ed\u30b0\u53ce\u96c6\u30fb\u76e3\u8996\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u6b63\u78ba\u306a\u4ed5\u69d8\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 https://docs.sentry.io/platforms/python/","title":"sentry\u306e\u4f7f\u7528"},{"location":"python-007-logging/#_20","text":"","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"python-007-logging/#_21","text":"","title":"\u9ad8\u5ea6\u306a\u30ed\u30ae\u30f3\u30b0"},{"location":"python-007-logging/#_22","text":"","title":"\u540c\u671f\u30fb\u975e\u540c\u671f\u5316\u3067\u306e\u30ed\u30ae\u30f3\u30b0"},{"location":"python-007-logging/#_23","text":"","title":"\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u5316\u3067\u306e\u30ed\u30ae\u30f3\u30b0"},{"location":"python-007-logging/#_24","text":"\u30ed\u30ac\u30fc\u306f\u3001\u6b21\u306e\u6319\u52d5\u306b\u6c17\u3092\u3064\u3051\u3066\u4f7f\u7528\u3059\u308b\u3002 \u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u521d\u671f\u5316\uff08 basicConfig \u304c\u5b9f\u884c\uff09\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b \u30ed\u30ac\u30fc\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30ed\u30b0\u30ec\u30d9\u30eb\u306f WARNING \u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30ed\u30b0\u30ec\u30d9\u30eb\u306f NOTSET \u30ed\u30ac\u30fc\u306f\u3001\u81ea\u8eab\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u5168\u3066\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u547c\u3073\u51fa\u3059 \u30cf\u30f3\u30c9\u30e9\u30fc\u306f\u3001\u4e0a\u4f4d\u306e\u30ed\u30ac\u30fc\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u5168\u3066\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u547c\u3073\u51fa\u3059 basicConfig \u306f \u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u306b\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u4f55\u3082\u3057\u306a\u3044\uff08 force \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5f37\u5236\u7684\u306b\u9069\u7528\u53ef\u80fd\uff09 \u30e9\u30a4\u30d6\u30e9\u30ea\u958b\u767a\u8005\u306f\u3001\u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3092\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002 \u30e9\u30a4\u30d6\u30e9\u30ea\u958b\u767a\u8005\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u8b66\u544a\u3092\u3057\u305f\u3044\u5834\u5408\u306f\u3001 warnings \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3002 \u30eb\u30fc\u30c8\u30ed\u30ac\u30fc\u3092\u7121\u52b9\u5316\u3057\u305f\u3044\u5834\u5408\u306b\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3002 logging . basicConfig ( handlers = [ logging . NullHandler ()])","title":"\u307e\u3068\u3081"},{"location":"python-008-exceptions/","text":"\u4f8b\u5916\u51e6\u7406 \u30a8\u30e9\u30fc\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u305d\u306e\u307e\u307eraise\u3057\u305f\u3044 \u6b21\u306e\u3088\u3046\u306b\u3001\u4f8b\u5916\u3092\u6355\u6349\u5f8c\u306b\u4efb\u610f\u306e\u51e6\u7406\u3092\u631f\u3093\u3067\u540c\u3058\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 try : raise Exception () except Exception as e : print ( e ) raise \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5909\u66f4\u3057\u3066\u8868\u793a\u3057\u305f\u3044 \u5bfe\u5fdc\u65b9\u6cd5\u306e\u898b\u5f53\u304c\u3064\u3044\u3066\u3044\u308b\u5834\u5408\u306a\u3069\u3001\u6b21\u306e\u3088\u3046\u306b\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3092\u5f15\u304d\u7d99\u3044\u3067\u3001\u65b0\u305f\u306a\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 try : raise RuntimeError () except RuntimeError as e : import sys type , value , traceback = sys . exc_info () raise Exception ( \"\u3053\u306e\u30a8\u30e9\u30fc\u306f\u30c6\u30b9\u30c8\u306a\u306e\u3067\u6c17\u306b\u3057\u306a\u3044\u3067\u306d\" ) . with_traceback ( traceback ) \u30c8\u30ec\u30fc\u30b9\u30d0\u30c3\u30af\u3092\u6587\u5b57\u5217\u3067\u53d6\u5f97\u3057\u305f\u3044 import traceback try : 1 / 0 except Exception as e : tb = \"\" . join ( traceback . TracebackException . from_exception ( e ) . format ()) print ( tb ) \u30ed\u30b0\u51fa\u529b\u6642\u306e\u60c5\u5831\u3067\u306a\u304f\u3001\u4f8b\u5916\u767a\u751f\u4f4d\u7f6e\u3092\u51fa\u529b\u3059\u308b\u3002 try : raise Exception () except Exception as e : logger . info ( e , exc_info = True ) \u30c8\u30ec\u30fc\u30b9\u30d0\u30c3\u30af\u60c5\u5831\u3092\u51fa\u529b\u3059\u308b \u3053\u306e\u65b9\u6cd5\u304c\u4e00\u756a\u7dba\u9e97\u306b\u51fa\u529b\u3057\u3066\u304f\u308c\u308b\u611f\u3058\u304c\u3059\u308b import traceback try : raise Exception () except Exception as e : logger . critical ( traceback . format_exc ())","title":"\u8a18\u4e8b08"},{"location":"python-008-exceptions/#_1","text":"","title":"\u4f8b\u5916\u51e6\u7406"},{"location":"python-008-exceptions/#raise","text":"\u6b21\u306e\u3088\u3046\u306b\u3001\u4f8b\u5916\u3092\u6355\u6349\u5f8c\u306b\u4efb\u610f\u306e\u51e6\u7406\u3092\u631f\u3093\u3067\u540c\u3058\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 try : raise Exception () except Exception as e : print ( e ) raise","title":"\u30a8\u30e9\u30fc\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u305d\u306e\u307e\u307eraise\u3057\u305f\u3044"},{"location":"python-008-exceptions/#_2","text":"\u5bfe\u5fdc\u65b9\u6cd5\u306e\u898b\u5f53\u304c\u3064\u3044\u3066\u3044\u308b\u5834\u5408\u306a\u3069\u3001\u6b21\u306e\u3088\u3046\u306b\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3092\u5f15\u304d\u7d99\u3044\u3067\u3001\u65b0\u305f\u306a\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 try : raise RuntimeError () except RuntimeError as e : import sys type , value , traceback = sys . exc_info () raise Exception ( \"\u3053\u306e\u30a8\u30e9\u30fc\u306f\u30c6\u30b9\u30c8\u306a\u306e\u3067\u6c17\u306b\u3057\u306a\u3044\u3067\u306d\" ) . with_traceback ( traceback )","title":"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5909\u66f4\u3057\u3066\u8868\u793a\u3057\u305f\u3044"},{"location":"python-008-exceptions/#_3","text":"import traceback try : 1 / 0 except Exception as e : tb = \"\" . join ( traceback . TracebackException . from_exception ( e ) . format ()) print ( tb )","title":"\u30c8\u30ec\u30fc\u30b9\u30d0\u30c3\u30af\u3092\u6587\u5b57\u5217\u3067\u53d6\u5f97\u3057\u305f\u3044"},{"location":"python-008-exceptions/#_4","text":"try : raise Exception () except Exception as e : logger . info ( e , exc_info = True )","title":"\u30ed\u30b0\u51fa\u529b\u6642\u306e\u60c5\u5831\u3067\u306a\u304f\u3001\u4f8b\u5916\u767a\u751f\u4f4d\u7f6e\u3092\u51fa\u529b\u3059\u308b\u3002"},{"location":"python-008-exceptions/#_5","text":"\u3053\u306e\u65b9\u6cd5\u304c\u4e00\u756a\u7dba\u9e97\u306b\u51fa\u529b\u3057\u3066\u304f\u308c\u308b\u611f\u3058\u304c\u3059\u308b import traceback try : raise Exception () except Exception as e : logger . critical ( traceback . format_exc ())","title":"\u30c8\u30ec\u30fc\u30b9\u30d0\u30c3\u30af\u60c5\u5831\u3092\u51fa\u529b\u3059\u308b"},{"location":"python-009-ideas/","text":"\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u9032\u6357\u3092\u8868\u793a\u3059\u308b \u30d5\u30a1\u30a4\u30eb\u9001\u53d7\u4fe1\u306a\u3069\u91cd\u305f\u3044\u51e6\u7406\u306a\u3069\u3067\u3001\u300c\u3069\u3053\u307e\u3067\u51e6\u7406\u304c\u9032\u3093\u3067\u3044\u308b\u304b\u300d\u300c\u3069\u308c\u304f\u3089\u3044\u6642\u9593\u304c\u304b\u304b\u3063\u305f\u300d\u306a\u3069\u304c\u5206\u304b\u308b\u3068\u89aa\u5207\u3067\u3059\u3002 \u3053\u3053\u3067\u306f\u3001\u305d\u308c\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u8868\u793a\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002 from tqdm import tqdm from concurrent.futures import ThreadPoolExecutor import time def func1 (): for i in tqdm ( range ( 10 ), position = 0 ): time . sleep ( 1 ) def func2 (): for i in tqdm ( range ( 20 ), position = 1 ): time . sleep ( 1 ) with ThreadPoolExecutor ( max_workers = 2 ) as th : r1 = th . submit ( func1 ) r2 = th . submit ( func2 )","title":"\u8a18\u4e8b09"},{"location":"python-009-ideas/#_1","text":"\u30d5\u30a1\u30a4\u30eb\u9001\u53d7\u4fe1\u306a\u3069\u91cd\u305f\u3044\u51e6\u7406\u306a\u3069\u3067\u3001\u300c\u3069\u3053\u307e\u3067\u51e6\u7406\u304c\u9032\u3093\u3067\u3044\u308b\u304b\u300d\u300c\u3069\u308c\u304f\u3089\u3044\u6642\u9593\u304c\u304b\u304b\u3063\u305f\u300d\u306a\u3069\u304c\u5206\u304b\u308b\u3068\u89aa\u5207\u3067\u3059\u3002 \u3053\u3053\u3067\u306f\u3001\u305d\u308c\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u8868\u793a\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002 from tqdm import tqdm from concurrent.futures import ThreadPoolExecutor import time def func1 (): for i in tqdm ( range ( 10 ), position = 0 ): time . sleep ( 1 ) def func2 (): for i in tqdm ( range ( 20 ), position = 1 ): time . sleep ( 1 ) with ThreadPoolExecutor ( max_workers = 2 ) as th : r1 = th . submit ( func1 ) r2 = th . submit ( func2 )","title":"\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u9032\u6357\u3092\u8868\u793a\u3059\u308b"},{"location":"security-001-oauth2/","text":"OAuth2 RFF6750\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u8a8d\u8a3c\u30b9\u30ad\u30fc\u30e0\u3067\u3042\u308b\u3002 OAuth\u306f\u3001\u8a8d\u53ef\u30b5\u30fc\u30d0\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u5bfe\u3057\u767a\u884c\u3059\u308b\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\uff08\u30a2\u30af\u30bb\u30b9\u8a8d\u53ef\u306e\u6587\u5b57\u5217\uff09\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u4fdd\u8b77\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3002\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u3001\u30ea\u30bd\u30fc\u30b9\u6240\u6709\u8005\u306e\u76f4\u63a5\u7684\u306a\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u5171\u6709\u3059\u308b\u3082\u306e\u3067\u306f\u306a\u3044\u3002 \u82f1\u8a9e \u65e5\u672c\u8a9e \u30ad\u30fc\u30ef\u30fc\u30c9 access token \u8a8d\u8a3c \u8a8d\u53ef Bearer token jwt token68 \u8a8d\u8a3c \u30b5\u30fc\u30d3\u30b9\u5229\u7528\u8005\u306f\u3001\u30ea\u30bd\u30fc\u30b9\u30aa\u30fc\u30ca\u30fc\u306bID\u3084\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4f1d\u3048\u3001\u30ea\u30bd\u30fc\u30b9\u30aa\u30fc\u30ca\u30fc\u306fID\u3084\u30d1\u30b9\u30ef\u30fc\u30c9\u306a\u3069\u304b\u3089\u5229\u7528\u8005\u3092\u7279\u5b9a\u3059\u308b\u3002 \u8a8d\u53ef \u30ea\u30bd\u30fc\u30b9\u30aa\u30fc\u30ca\u30fc\u306f\u8a8d\u8a3c\u306e\u7d50\u679c\u3068\u3057\u3066\u3001\u30b5\u30fc\u30d3\u30b9\u306e\u5229\u7528\u8a31\u53ef\u3068\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u30ea\u30bd\u30fc\u30b9\u7bc4\u56f2\u3092\u793a\u3059\u30c8\u30fc\u30af\u30f3\u3092\u8fd4\u3059\u3002 \u8a8d\u8a3c\u30fb\u8a8d\u53ef\u3068\u306f\u3001\u3044\u308f\u3086\u308b\u30ed\u30b0\u30a4\u30f3\u306e\u3053\u3068\u3067\u3042\u308b\u3002 access token \u8a8d\u53ef\u30b5\u30fc\u30d0\u304c\u767a\u884c\u3059\u308b\u30a2\u30af\u30bb\u30b9\u8a8d\u53ef\u306e\u6587\u5b57\u5217\u3002 \u5165\u9928\u8a3c\u306e\u3088\u3046\u306a\u3082\u306e\u3060\u3002 \u7f72\u540d\u306a\u3057\u30c8\u30fc\u30af\u30f3(Bearer Token) \u30c8\u30fc\u30af\u30f3\u3092\u6240\u6709\u3059\u308b\u4efb\u610f\u306e\u30d1\u30fc\u30c6\u30a3\uff08Bearer=\u6301\u53c2\u4eba\u6255\u3044\uff09\u306f\u3001\u300c\u30c8\u30fc\u30af\u30f3\u3092\u6240\u6709\u3057\u3066\u3044\u308b\u300d\u3068\u3044\u3046\u6761\u4ef6\u3092\u6e80\u305f\u305b\u3070\u30c8\u30fc\u30af\u30f3\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u96fb\u8eca\u306e\u5207\u7b26\u306e\u3088\u3046\u306b\u3001\u8cb7\u3063\u305f\u672c\u4eba\u3067\u306a\u304f\u3068\u3082\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 headers={\"X-Token\": secret_token} \u73fe\u5728\u306e\u30ed\u30b0\u30a4\u30f3\u51e6\u7406 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u3001\u30e6\u30fc\u30b6\u540d\u30fb\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d7\u3051\u53d6\u308a\u3001\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3002\uff08\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u3092\u7528\u3044\u308b\uff09 \u30e6\u30fc\u30b6\u30fc\u540d\u30fb\u30a2\u30af\u30bb\u30b9\u30b9\u30b3\u30fc\u30d7\u30fb\u6709\u52b9\u671f\u9650\u60c5\u5831\u3092\u4ed8\u4e0e\u3057\u305f\u60c5\u5831\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3001\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3068\u3057\u3066\u8fd4\u3059\u3002 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8981\u6c42\u3055\u308c\u305f\u6642\u3001\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u304b\u3089\u30e6\u30fc\u30b6\u30fc\u540d\u30fb\u30a2\u30af\u30bb\u30b9\u30b9\u30b3\u30fc\u30d7\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u3001\u6a29\u9650\u306b\u5fdc\u3058\u3066\u51e6\u7406\u3092\u53d7\u3051\u5165\u308c\u308b\u3002 \u7591\u554f \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u7528\u306e\u30ad\u30fc\u30fb\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\uff08\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u30fb\u30e6\u30fc\u30b6\u30fcID\u306e\u30da\u30a2\uff09\u306f\u5fc5\u8981\u306a\u3044\u306e\u304b\uff1f \u53ef\u80fd\u6027\u3068\u3057\u3066\u7121\u8996\u3067\u304d\u308b\u30ec\u30d9\u30eb\u3060\u304c\u3001\u610f\u56f3\u3068\u7570\u306a\u308b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u304c\u57cb\u3081\u8fbc\u307e\u308c\u305f\u540c\u4e00\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u751f\u6210\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002 \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u5fa9\u5143\u3067\u304d\u305f\u5834\u5408\u3001\u60c5\u5831\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3057\u307e\u3046\u3002 \u30c8\u30fc\u30af\u30f3\u306b\u306f\u3001\u8b58\u5225\u5b50\u578b\u3068\u5185\u5305\u578b\u304c\u3042\u308b\u3002 \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u3001RFC7519\u3067\u5b9a\u3081\u3089\u308c\u308bJWT(JSON Web Token)\u304c\u7528\u3044\u3089\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3002 \u8b58\u5225\u5b50\u578b\u306f\u3001RFC7662\u3068\u3044\u3046\u6a19\u6e96\u4ed5\u69d8\u304c\u5b58\u5728\u3059\u308b \u5185\u5305\u578b\u306b\u306f\u3001RFC6749\u306b\u3066\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u7f72\u540d\u65b9\u6cd5\u304c\u8a18\u3055\u308c\u3066\u3044\u308b\u3002 \u5185\u5305\u578b\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u3001\u6709\u52b9\u671f\u9650\u524d\u306b\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u5931\u52b9\u3055\u305b\u308b\u3053\u3068\u304c\u96e3\u3057\u3044\u3068\u66f8\u304b\u308c\u305f\u8a18\u4e8b\u304c\u3042\u308b\u3002\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306b\u751f\u6210\u65e5\u6642\u3092\u57cb\u3081\u8fbc\u3081\u3070\u53ef\u80fd\u3067\u306f\u3002 \u305d\u3082\u305d\u3082JWT\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u81ea\u4f53\u306b\u3001\u4ed5\u69d8\u3092\u5229\u7528\u3057\u305f\u8106\u5f31\u6027\u304c\u3042\u308b\u3068\u306e\u58f0\u3082\u3042\u308b\u3002 \u8a8d\u8a3c\u6642\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3060\u304c\u3001\u3053\u308c\u306fOAuth2\u306e\u4ed5\u69d8\u306a\u306e\u3060\u308d\u3046\u304b\uff1f grant_type=\"password\", username=USERNAME, password=PASSWORD, scope=\" \".join([\"me\", \"items\"]), # \u8907\u6570\u306e\u30b9\u30b3\u30fc\u30d7\u306f\u3001\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3063\u3066\u6307\u5b9a\u3059\u308b client_id=None, client_secret=None","title":"\u8a18\u4e8b10"},{"location":"security-001-oauth2/#oauth2","text":"RFF6750\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u8a8d\u8a3c\u30b9\u30ad\u30fc\u30e0\u3067\u3042\u308b\u3002 OAuth\u306f\u3001\u8a8d\u53ef\u30b5\u30fc\u30d0\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u5bfe\u3057\u767a\u884c\u3059\u308b\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\uff08\u30a2\u30af\u30bb\u30b9\u8a8d\u53ef\u306e\u6587\u5b57\u5217\uff09\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u4fdd\u8b77\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3002\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u3001\u30ea\u30bd\u30fc\u30b9\u6240\u6709\u8005\u306e\u76f4\u63a5\u7684\u306a\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u5171\u6709\u3059\u308b\u3082\u306e\u3067\u306f\u306a\u3044\u3002 \u82f1\u8a9e \u65e5\u672c\u8a9e","title":"OAuth2"},{"location":"security-001-oauth2/#_1","text":"access token \u8a8d\u8a3c \u8a8d\u53ef Bearer token jwt token68","title":"\u30ad\u30fc\u30ef\u30fc\u30c9"},{"location":"security-001-oauth2/#_2","text":"\u30b5\u30fc\u30d3\u30b9\u5229\u7528\u8005\u306f\u3001\u30ea\u30bd\u30fc\u30b9\u30aa\u30fc\u30ca\u30fc\u306bID\u3084\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4f1d\u3048\u3001\u30ea\u30bd\u30fc\u30b9\u30aa\u30fc\u30ca\u30fc\u306fID\u3084\u30d1\u30b9\u30ef\u30fc\u30c9\u306a\u3069\u304b\u3089\u5229\u7528\u8005\u3092\u7279\u5b9a\u3059\u308b\u3002","title":"\u8a8d\u8a3c"},{"location":"security-001-oauth2/#_3","text":"\u30ea\u30bd\u30fc\u30b9\u30aa\u30fc\u30ca\u30fc\u306f\u8a8d\u8a3c\u306e\u7d50\u679c\u3068\u3057\u3066\u3001\u30b5\u30fc\u30d3\u30b9\u306e\u5229\u7528\u8a31\u53ef\u3068\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u30ea\u30bd\u30fc\u30b9\u7bc4\u56f2\u3092\u793a\u3059\u30c8\u30fc\u30af\u30f3\u3092\u8fd4\u3059\u3002 \u8a8d\u8a3c\u30fb\u8a8d\u53ef\u3068\u306f\u3001\u3044\u308f\u3086\u308b\u30ed\u30b0\u30a4\u30f3\u306e\u3053\u3068\u3067\u3042\u308b\u3002","title":"\u8a8d\u53ef"},{"location":"security-001-oauth2/#access-token","text":"\u8a8d\u53ef\u30b5\u30fc\u30d0\u304c\u767a\u884c\u3059\u308b\u30a2\u30af\u30bb\u30b9\u8a8d\u53ef\u306e\u6587\u5b57\u5217\u3002 \u5165\u9928\u8a3c\u306e\u3088\u3046\u306a\u3082\u306e\u3060\u3002","title":"access token"},{"location":"security-001-oauth2/#bearer-token","text":"\u30c8\u30fc\u30af\u30f3\u3092\u6240\u6709\u3059\u308b\u4efb\u610f\u306e\u30d1\u30fc\u30c6\u30a3\uff08Bearer=\u6301\u53c2\u4eba\u6255\u3044\uff09\u306f\u3001\u300c\u30c8\u30fc\u30af\u30f3\u3092\u6240\u6709\u3057\u3066\u3044\u308b\u300d\u3068\u3044\u3046\u6761\u4ef6\u3092\u6e80\u305f\u305b\u3070\u30c8\u30fc\u30af\u30f3\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u96fb\u8eca\u306e\u5207\u7b26\u306e\u3088\u3046\u306b\u3001\u8cb7\u3063\u305f\u672c\u4eba\u3067\u306a\u304f\u3068\u3082\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 headers={\"X-Token\": secret_token}","title":"\u7f72\u540d\u306a\u3057\u30c8\u30fc\u30af\u30f3(Bearer Token)"},{"location":"security-001-oauth2/#_4","text":"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u3001\u30e6\u30fc\u30b6\u540d\u30fb\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d7\u3051\u53d6\u308a\u3001\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3002\uff08\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u3092\u7528\u3044\u308b\uff09 \u30e6\u30fc\u30b6\u30fc\u540d\u30fb\u30a2\u30af\u30bb\u30b9\u30b9\u30b3\u30fc\u30d7\u30fb\u6709\u52b9\u671f\u9650\u60c5\u5831\u3092\u4ed8\u4e0e\u3057\u305f\u60c5\u5831\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3001\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3068\u3057\u3066\u8fd4\u3059\u3002 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8981\u6c42\u3055\u308c\u305f\u6642\u3001\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u304b\u3089\u30e6\u30fc\u30b6\u30fc\u540d\u30fb\u30a2\u30af\u30bb\u30b9\u30b9\u30b3\u30fc\u30d7\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u3001\u6a29\u9650\u306b\u5fdc\u3058\u3066\u51e6\u7406\u3092\u53d7\u3051\u5165\u308c\u308b\u3002","title":"\u73fe\u5728\u306e\u30ed\u30b0\u30a4\u30f3\u51e6\u7406"},{"location":"security-001-oauth2/#_5","text":"\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u7528\u306e\u30ad\u30fc\u30fb\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\uff08\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u30fb\u30e6\u30fc\u30b6\u30fcID\u306e\u30da\u30a2\uff09\u306f\u5fc5\u8981\u306a\u3044\u306e\u304b\uff1f \u53ef\u80fd\u6027\u3068\u3057\u3066\u7121\u8996\u3067\u304d\u308b\u30ec\u30d9\u30eb\u3060\u304c\u3001\u610f\u56f3\u3068\u7570\u306a\u308b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u304c\u57cb\u3081\u8fbc\u307e\u308c\u305f\u540c\u4e00\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u751f\u6210\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002 \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u5fa9\u5143\u3067\u304d\u305f\u5834\u5408\u3001\u60c5\u5831\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3057\u307e\u3046\u3002 \u30c8\u30fc\u30af\u30f3\u306b\u306f\u3001\u8b58\u5225\u5b50\u578b\u3068\u5185\u5305\u578b\u304c\u3042\u308b\u3002 \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u3001RFC7519\u3067\u5b9a\u3081\u3089\u308c\u308bJWT(JSON Web Token)\u304c\u7528\u3044\u3089\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3002 \u8b58\u5225\u5b50\u578b\u306f\u3001RFC7662\u3068\u3044\u3046\u6a19\u6e96\u4ed5\u69d8\u304c\u5b58\u5728\u3059\u308b \u5185\u5305\u578b\u306b\u306f\u3001RFC6749\u306b\u3066\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u7f72\u540d\u65b9\u6cd5\u304c\u8a18\u3055\u308c\u3066\u3044\u308b\u3002 \u5185\u5305\u578b\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u3001\u6709\u52b9\u671f\u9650\u524d\u306b\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u5931\u52b9\u3055\u305b\u308b\u3053\u3068\u304c\u96e3\u3057\u3044\u3068\u66f8\u304b\u308c\u305f\u8a18\u4e8b\u304c\u3042\u308b\u3002\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306b\u751f\u6210\u65e5\u6642\u3092\u57cb\u3081\u8fbc\u3081\u3070\u53ef\u80fd\u3067\u306f\u3002 \u305d\u3082\u305d\u3082JWT\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u81ea\u4f53\u306b\u3001\u4ed5\u69d8\u3092\u5229\u7528\u3057\u305f\u8106\u5f31\u6027\u304c\u3042\u308b\u3068\u306e\u58f0\u3082\u3042\u308b\u3002","title":"\u7591\u554f"},{"location":"security-001-oauth2/#oauth2_1","text":"grant_type=\"password\", username=USERNAME, password=PASSWORD, scope=\" \".join([\"me\", \"items\"]), # \u8907\u6570\u306e\u30b9\u30b3\u30fc\u30d7\u306f\u3001\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3063\u3066\u6307\u5b9a\u3059\u308b client_id=None, client_secret=None","title":"\u8a8d\u8a3c\u6642\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3060\u304c\u3001\u3053\u308c\u306fOAuth2\u306e\u4ed5\u69d8\u306a\u306e\u3060\u308d\u3046\u304b\uff1f"}]}